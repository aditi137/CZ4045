Garbage,collection,is,faster,(,more,time,efficient,),than,reference,counting,",",if,you,have,enough,memory,.,For,example,",",a,copying,gc,traverses,the,"""",live,"""",objects,and,copies,them,to,a,new,space,",",and,can,reclaim,all,the,"""",dead,"""",objects,in,one,step,by,marking,a,whole,memory,region,.,This,is,very,efficient,",",if,you,have,enough,memory,.,Generational,collections,use,the,knowledge,that,"""",most,objects,die,young,"""",;,often,only,a,few,percent,of,objects,have,to,be,copied,.,[,This,is,also,the,reason,why,gc,can,be,faster,than,malloc,/,free,],Reference,counting,is,much,more,space,efficient,than,garbage,collection,",",since,it,reclaims,memory,the,very,moment,it,gets,unreachable,.,This,is,nice,when,you,want,to,attach,finalizers,to,objects,(,e.g,.,to,close,a,file,once,the,File,object,gets,unreachable,),.,A,reference,counting,system,can,work,even,when,only,a,few,percent,of,the,memory,is,free,.,But,the,management,cost,of,having,to,increment,and,decrement,counters,upon,each,pointer,assignment,cost,a,lot,of,time,",",and,some,kind,of,garbage,collection,is,still,needed,to,reclaim,cycles,.,So,the,trade-off,is,clear,:,if,you,have,to,work,in,a,memory-constrained,environment,",",or,if,you,need,precise,finalizers,",",use,reference,counting,.,If,you,have,enough,memory,and,need,the,speed,",",use,garbage,collection,.
