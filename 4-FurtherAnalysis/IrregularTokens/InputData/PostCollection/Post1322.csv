I,believe,everything,you've,stated,is,correct,.,On,Linux,",",os.pipe,is,just,a,Python,interface,for,accessing,traditional,POSIX,pipes,.,On,Windows,",",it's,implemented,using,CreatePipe,.,When,you,call,it,",",you,get,two,ordinary,file,descriptors,back,.,It's,unidirectional,",",and,you,just,write,bytes,to,it,on,one,end,that,get,buffered,by,the,kernel,until,someone,reads,from,the,other,side,.,It's,fairly,low-level,",",at,least,by,Python,standards,.,multiprocessing.Pipe,objects,are,much,more,high,level,interface,",",implemented,using,multiprocessing.Connection,objects,.,On,Linux,",",these,are,actually,built,on,top,of,POSIX,sockets,",",rather,than,POSIX,pipes,.,On,Windows,",",they're,built,using,the,CreateNamedPipe,API,.,As,you,noted,",",multiprocessing.Connection,objects,can,send,/,receive,any,picklable,object,",",and,will,automatically,handle,the,pickling,/,unpickling,process,",",rather,than,just,dealing,with,bytes,.,They're,capable,of,being,both,bidirectional,and,unidirectional,.
