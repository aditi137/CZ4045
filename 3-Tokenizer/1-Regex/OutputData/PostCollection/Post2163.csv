,0
0,Let
1,'s
2,quote
3,"docs:
reload(module)"
4,Reload
5,a
6,previously
7,imported
8,module
9,.
10,The
11,argument
12,must
13,be
14,a
15,module
16,object
17,","
18,so
19,it
20,must
21,have
22,been
23,successfully
24,imported
25,before
26,.
27,This
28,is
29,useful
30,if
31,you
32,have
33,edited
34,the
35,module
36,source
37,file
38,using
39,an
40,external
41,editor
42,and
43,want
44,to
45,try
46,out
47,the
48,new
49,version
50,without
51,leaving
52,the
53,Python
54,interpreter
55,.
56,The
57,return
58,value
59,is
60,the
61,module
62,object
63,(the
64,same
65,as
66,the
67,module
68,argument
69,).
70,The
71,argument
72,must
73,be
74,a
75,module
76,object
77,","
78,so
79,it
80,must
81,have
82,been
83,successfully
84,imported
85,before
86,.
87,When
88,you
89,do
90,from
91,inputs
92,import
93,*
94,you
95,actually
96,has
97,no
98,module
99,object
100,in
101,your
102,namespace
103,.
104,Only
105,module
106,members
107,.
108,When
109,reload
110,(module)
111,is
112,"executed:
Python modules’ code is recompiled and the module-level code reexecuted, defining a new set of objects which are bound to names in
  the module’s dictionary. The init function of extension modules is not
  called a second time.
As with all other objects in Python the old objects are only reclaimed after their reference counts drop to zero.
The names in the module namespace are updated to point to any new or changed objects.
Other references to the old objects (such as names external to the module)"
113,are
114,not
115,rebound
116,to
117,refer
118,to
119,the
120,new
121,objects
122,and
123,must
124,be
125,updated
126,in
127,each
128,namespace
129,where
130,they
131,occur
132,if
133,that
134,is
135,desired
136,.
137,Other
138,references
139,to
140,the
141,old
142,objects
143,(such
144,as
145,names
146,external
147,to
148,the
149,module
150,)
151,are
152,not
153,rebound
154,to
155,refer
156,to
157,the
158,new
159,objects
160,and
161,must
162,be
163,updated
164,in
165,each
166,namespace
167,where
168,they
169,occur
170,if
171,that
172,is
173,desired
174,.
175,You
176,star
177,-imported
178,A
179,","
180,B
181,and
182,C
183,are
184,precisely
185,other
186,references
187,.
188,To
189,sum
190,up
191,","
192,an
193,example
194,code
195,would
196,be
197,:
