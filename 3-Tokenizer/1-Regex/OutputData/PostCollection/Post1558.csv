,0
0,You
1,need
2,more
3,abstraction
4,.
5,Don
6,'t
7,hard
8,-code
9,the
10,file
11,path
12,in
13,printfile
14,.py
15,Don
16,'t
17,access
18,a
19,global
20,in
21,the
22,printf
23,function
24,.
25,Do
26,accept
27,a
28,file
29,handle
30,as
31,a
32,parameter
33,to
34,the
35,printf
36,"function:
In a script that does actually need to know the path of f.txt (I guess helloworld.py in your case)"
37,","
38,put
39,it
40,there
41,","
42,open
43,it
44,","
45,and
46,pass
47,it
48,to
49,"printf:
Better yet, get the file path from the command line
EDIT: You said on your Google+ cross-post:
full path is problem, the program will run on differents environments.
If you're trying to distribute your program to other users and machines, you should look into making a distribution package (see side note 3 below)"
50,","
51,and
52,using
53,package_data
54,to
55,include
56,your
57,configuration
58,file
59,","
60,and
61,pkgutil
62,or
63,pkg_resources
64,to
65,access
66,the
67,configuration
68,file
69,.
70,See
71,How
72,do
73,I
74,use
75,data
76,in
77,package_data
78,from
79,source
80,code
81,?
82,Some
83,side
84,-notes:
85,Represent
86,directories
87,as
88,the
89,directory
90,name
91,with
92,a
93,trailing
94,slash
95,","
96,Ãƒ
97,la
98,the
99,conventions
100,of
101,the
102,tree
103,command
104,:
105,/
106,instead
107,of
108,"<root>,"
109,moduleOne
110,/
111,instead
112,of
113,<moduleOne>
114,You
115,'re
116,conflating
117,"""module"""
118,with
119,"""package""."
120,I
121,suggest
122,you
123,rename
124,moduleOne
125,/
126,to
127,packageOne
128,/.
129,A
130,directory
131,with
132,an
133,__init__
134,.py
135,file
136,constitutes
137,a
138,package
139,.
140,A
141,file
142,ending
143,in
144,a
145,.py
146,extension
147,is
148,a
149,module
150,.
151,Modules
152,can
153,be
154,part
155,of
156,packages
157,by
158,physically
159,existing
160,inside
161,a
162,directory
163,with
164,an
165,__init__
166,.py
167,file
168,.
169,Packages
170,can
171,be
172,part
173,of
174,other
175,packages
176,by
177,being
178,a
179,physical
180,subdirectory
181,of
182,a
183,parent
184,directory
185,with
186,an
187,__init__
188,.py
189,file
190,.
191,Unfortunately
192,","
193,the
194,term
195,"""package"""
196,is
197,overloaded
198,in
199,Python
200,and
201,also
202,can
203,mean
204,a
205,collection
206,of
207,Python
208,code
209,for
210,distribution
211,and
212,installation
213,.
214,See
215,the
216,Python
217,Packaging
218,Guide
219,glossary
220,.
