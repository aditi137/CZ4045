,0
0,This
1,isn
2,'t
3,logically
4,correct
5,","
6,as
7,the
8,following
9,simple
10,counterexample
11,"shows:
This array contains no bordered square, but your code reports that it contains a square of edge length 3.  You need either a third nested loop through all candidate square sizes down from x to 1 (making the solution O(n^3)"
12,-time)
13,or
14,","
15,possibly
16,","
17,some
18,more
19,sophisticated
20,data
21,structure
22,that
23,enables
24,an
25,equivalent
26,check
27,to
28,be
29,performed
30,faster
31,.
32,[EDIT
33,to
34,address
35,updated
36,algorithm
37,]
38,The
39,new
40,algorithm
41,thinks
42,there
43,is
44,no
45,bordered
46,square
47,in
48,either
49,despite
50,there
51,being
52,a
53,3x3
54,one
55,in
56,each
57,.
58,Stop
59,guessing
60,at
61,fixes
62,and
63,think
64,about
65,how
66,to
67,break
68,down
69,the
70,set
71,of
72,all
73,possible
74,locations
75,of
76,bordered
77,squares
78,into
79,sets
80,that
81,you
82,can
83,efficiently
84,(or
85,even
86,not
87,-so-efficiently)
88,check
89,.
90,As
91,I
92,tried
93,to
94,say
95,at
96,the
97,"top: For each possible bottom-right corner of a bordered square, your code is currently only checking one rectangle.  But many more rectangles could have (i, j)"
98,as
99,a
100,bottom
101,-right
102,corner
103,--
104,where
105,are
106,the
107,tests
108,for
109,them
110,?
