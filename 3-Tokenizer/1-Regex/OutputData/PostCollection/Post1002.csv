,0
0,Your
1,documentation
2,reference
3,is
4,for
5,Python
6,3
7,.0.1.
8,There
9,is
10,no
11,good
12,reason
13,using
14,Python
15,3
16,.0.
17,You
18,should
19,be
20,using
21,3
22,.2
23,or
24,2
25,.7.
26,What
27,exactly
28,are
29,you
30,using
31,?
32,Suggestion: (1)
33,change
34,bytes
35,to
36,raw_bytes
37,to
38,avoid
39,confusion
40,with
41,the
42,bytes
43,built
44,-in
45,(2)
46,check
47,for
48,raw_bytes
49,==
50,bytes_back
51,in
52,your
53,test
54,script
55,(3)
56,while
57,your
58,test
59,should
60,work
61,with
62,quoted
63,"-printable,"
64,it
65,is
66,very
67,inefficient
68,for
69,binary
70,data
71,;
72,use
73,base64
74,instead
75,.
76,"Update: Base64 encoding produces 4 output bytes for every 3 input bytes. Your base64 code doesn't work with 56-byte chunks because 56 is not an integral multiple of 3; each chunk is padded out to a multiple of 3. Then you join the chunks and attempt to decode, which is guaranteed not to work.
Your chunking loop would be much better written as:
In any case, chunking is rather slow and pointless; just do b2a_base64(raw_bytes)"
