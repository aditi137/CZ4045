If,you'd,like,to,have,a,function,always,return,exactly,the,same,type,as,its,parameter,",",you,can,use,generics,via,the,TypeVars,class,:,The,expression,TState,=,"TypeVar('TState', bound=State)",means,"""",create,a,new,generic,parameter,named,TState,which,must,always,be,a,subclass,of,a,State,object,.,"""",However,",",since,the,State,class,isn't,defined,yet,",",we,need,to,use,a,forward,reference,and,have,the,bound,be,a,string,instead,of,the,class,name,:,TState,=,"TypeVar('TState', bound='State')",.,You,could,also,do,TState,=,TypeVar('TState'),which,means,"""",create,a,new,generic,parameter,named,TState,which,can,be,anything,"""",",",but,that,probably,isn't,what,you,want,so,I,don't,recommend,it,.,You,can,learn,more,about,upper,bounds,in,TypeVars,here,:,http://mypy.readthedocs.io/en/latest/generics.html#type-variables-with-upper-bounds
