,0
0,Here
1,'s
2,how
3,I
4,would
5,solve
6,"it:
Read the csv-file. This can be done using the csv module for python
Read and/or convert the date stamps according to your bin size, and iterate through each line, adding to the correct hour bin. I just do it the dirty way and cut the minutes and seconds: row[0][:-5] returns 15/07/2015 11, a date and hour to work with.
You'll end up with a list status_records which consists of two dicts, representing the two status options, which then contain the hour bins:
""1""   : {""15/07/2015 11"": 3, ...}
""-11"" : {""15/07/2015 11"": 0, ...}
Here's a sample data.csv with some more data (so that you can actually see something, which is difficult with just your 2 entries - I'm using the same date format and the status codes you mentioned)"
7,:
8,And
9,here
10,'s
11,my
12,code
13,(you'll
14,have
15,to
16,change
17,row
18,[0]
19,etc
20,.
21,to
22,the
23,according
24,rows
25,to
26,work
27,with
28,your
29,csv
30,):
31,"Output:
Improvements: You may want to add some useful labels, and decide wether to show time in which nothing happens (which will maybe clutter the chart with gaps)"
32,.
33,Also
34,","
35,be
36,aware
37,that
38,as
39,-is
40,the
41,dates
42,should
43,be
44,sorted
45,in
46,the
47,csv
48,","
49,else
50,you
51,have
52,to
53,sort
54,them
55,yourself
56,in
57,the
58,code
59,.
60,Anyway
61,","
62,this
63,should
64,give
65,you
66,something
67,to
68,start
69,with
70,.
