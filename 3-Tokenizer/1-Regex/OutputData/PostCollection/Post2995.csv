,0
0,I
1,am
2,not
3,sure
4,about
5,your
6,setup
7,.py
8,requirement
9,(I
10,don
11,’t
12,know
13,why
14,you
15,would
16,need
17,that
18,)
19,but
20,as
21,for
22,the
23,runtime
24,import issue
25,","
26,I
27,wrote
28,a
29,decorator
30,to
31,do
32,just
33,"that:
… this lets you decorate functions as @external – and they are replaced at runtime automatically with the Cython-optimized versions you’ve provided.
If you wanted to extend this idea to replacing entire Cythonized classes, it’d be straightforward to use the same logic in the __new__ method of a metaclass (e.g. opportunistic find-and-replace in the optimized module)"
34,.
