,0
0,I
1,'m
2,using
3,networkx
4,(library
5,for
6,python
7,to
8,deal
9,with
10,graphs
11,).
12,I
13,basically
14,have
15,nodes
16,with
17,various
18,edges
19,but
20,want
21,to
22,see
23,what
24,a
25,path
26,would
27,look
28,like
29,if
30,it
31,used
32,the
33,nodes
34,that
35,were
36,the
37,most
38,connected
39,.
40,I
41,can
42,use
43,this
44,command
45,to
46,see
47,the
48,number
49,of
50,"connections:
and I can get the number of edges, but I'm not sure how to apply this to list as a path.  For example, I can add this number as an attribute but I don't think attributes are taken into consideration when finding a path and because I'm adding this after the edges are connected, I cannot add the weights to the edges themselves. The other problem is the higher the score the more I want the path to be followed but with edges I think it follows the lowest weighted edge.
I'm wondering what approach do other people take to find paths based on certain characteristics of the node?  If someone knows how to do this for networkx, great! but I think networkx has many features so if I can get the theory or general approach I'm sure I can find a way to do it in python.
UPDATE: Sorry I might be explaining it wrong.  I understand I can add attributes to nodes, but I'm not sure how to make path decisions based on those attributes.  So in my case, based on certain conditions I am adding edges between nodes. Each group of nodes represents a different day(day1data.., day2data.., day3data..)"
51,","
52,so
53,I
54,'m
55,connecting
56,a
57,few
58,nodes
59,from
60,day1
61,to
62,nodes
63,on
64,day2
65,only
66,if
67,certain
68,rules
69,are
70,matched
71,.
72,Once
73,I
74,have
75,the
76,edges
77,connected
78,","
79,I
80,want
81,those
82,ones
83,to
84,be
85,considered
86,more
87,heavily
88,when
89,choosing
90,a
91,path
92,.
93,So
94,I
95,added
96,an
97,attribute
98,'weight'
99,to
100,each
101,node
102,of
103,the
104,current
105,day
106,which
107,is
108,basically
109,the
110,total
111,number
112,of
113,edges
114,connecting
115,that
116,node
117,.
118,My
119,problem
120,is
121,","
122,the
123,weight
124,attribute
125,is
126,not
127,used
128,in
129,any
130,of
131,the
132,path
133,decision
134,making
135,because
136,its
137,an
138,attribute
139,I
140,created
141,and
142,labeled
143,myself
144,(I
145,could
146,create
147,a
148,label
149,named
150,'abc'='hello
151,world
152,'
153,and
154,it
155,would
156,apply
157,that
158,attribute
159,to
160,the
161,node
162,).
163,How
164,can
165,I
166,get
167,this
168,weight
169,to
170,be
171,considered
172,when
173,creating
174,the
175,path
176,(the
177,edges
178,are
179,already
180,created
181,so
182,I
183,don
184,'t
185,think
186,I
187,can
188,go
189,back
190,and
191,recreate
192,them
193,)?
