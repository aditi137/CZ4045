,0
0,I
1,am
2,a
3,Python
4,novice
5,who
6,is
7,trying
8,to
9,learn
10,a
11,bit
12,about
13,this
14,fantastic
15,programming
16,language
17,.
18,I
19,have
20,tried
21,using
22,scipy
23,.weave.inline
24,to
25,speed
26,up
27,some
28,computation
29,.
30,Just
31,to
32,learn
33,a
34,bit
35,","
36,I
37,tried
38,to
39,implement
40,a
41,matrix
42,multiplication
43,using
44,scipy
45,.weave.inline.
46,I
47,have
48,not
49,included
50,any
51,error
52,handling
53,-
54,just
55,trying
56,it
57,out
58,to
59,better
60,understand
61,it
62,.
63,The
64,code
65,is
66,as
67,"follows:
When I compare with numpy.dot, I experience that the weave.inline version takes roughly 50x the time as numpy.dot. I know that numpy is very fast when it can be applied. The difference is even seen for large matrices such as size 1000 x 1000.
I have checked both numpy.dot and scipy.weave.inline and both appear to use one core 100% when computing. Numpy.dot delivers 10.0 GFlops compared to the theoretical 11.6 GFlops of my laptop (double precision)"
68,.
69,In
70,single
71,precision
72,I
73,measure
74,the
75,double
76,performance
77,as
78,expected
79,.
80,But
81,the
82,scipy
83,.weave.inline
84,is
85,way
86,behind
87,.
88,1
89,/50
90,times
91,this
92,performance
93,for
94,scipy
95,.weave.inline.
96,Is
97,this
98,difference
99,to
100,be
101,expected
102,?
103,Or
104,what
105,am
106,I
107,doing
108,wrong
109,?
