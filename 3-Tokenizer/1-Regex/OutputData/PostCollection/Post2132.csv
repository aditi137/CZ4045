,0
0,I
1,'m
2,using
3,py
4,.test
5,to
6,execute
7,a
8,suite
9,of
10,selenium
11,tests
12,.
13,I
14,'m
15,essentially
16,running
17,a
18,collector
19,in
20,my
21,conftest
22,.py
23,that
24,generates
25,tests
26,like
27,this
28,(I
29,stole
30,this
31,from
32,the
33,pytest
34,documentation
35,):
36,My
37,test
38,cases
39,are
40,placed
41,in
42,objects
43,that
44,look
45,like
46,"this:
I instantiate them something like this:
My browsers are attached to a grid server, I make a list of them like this:
I store the target environment in a config file that is an instantiation of an object like this:
Then I have a test class that creates a list of test cases like this - the test object parameters are actually strings that allow for self generating code.  I'm oversimplifying as I pass them in as fill ins to broader exec statements:
When the collector runs, it looks like this:
    collected # items
    <Module 'tests.py'>
      <Class 'TestClass'>
        <Instance '()"
47,'>
48,<Function
49,"""test_function[environment0-test_object0-('browser_1',"
50,GRID_SERVER
51,")]"">"
52,<Function
53,"""test_function[environment1-test_object1-('browser_2',"
54,GRID_SERVER
55,")]"">"
56,<Function
57,"""test_function[environment2-test_object2-('browser_1',"
58,GRID_SERVER
59,")]"">"
60,<Function
61,"""test_function[environment3-test_object3-('browser_2',"
62,GRID_SERVER
63,")]"">"
64,I
65,want
66,to
67,have
68,the
69,collector
70,work
71,in
72,such
73,a
74,way
75,that
76,I
77,get
78,back
79,useful
80,information
81,about
82,each
83,item
84,-
85,I
86,'ve
87,messed
88,around
89,with
90,setting
91,__str__
92,","
93,__repr__
94,","
95,and
96,__name__
97,methods
98,in
99,various
100,places
101,but
102,haven
103,'t
104,had
105,the
106,results
107,I
108,expected
109,.
110,I
111,'d
112,like
113,to
114,be
115,able
116,to
117,roll
118,this
119,into
120,reporting
121,-
122,there
123,are
124,over
125,200
126,tests
127,that
128,this
129,generates
130,in
131,production
132,and
133,I
134,have
135,to
136,trace
137,through
138,stack
139,traces
140,currently
141,to
142,figure
143,out
144,exactly
145,what
146,was
147,being
148,tested
149,for
150,each
151,failure
152,.
153,I
154,'m
155,not
156,really
157,sure
158,where
159,I
160,'m
161,making
162,my
163,mistakes
164,here
165,","
166,should
167,I
168,modify
169,my
170,implementation
171,of
172,pytest_generate_tests
173,","
174,or
175,the
176,way
177,I
178,'m
179,creating
180,my
181,TestClass
182,","
183,or
184,set
185,up
186,the
187,cases
188,in
189,a
190,different
191,way
192,?
193,Ideally
194,","
195,I
196,want
197,something
198,that
199,can
200,be
201,mapped
202,back
203,via
204,an
205,ORM
206,to
207,include
208,test
209,metadata
210,as
211,well
212,.
