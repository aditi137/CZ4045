,0
0,On
1,Unix
2,time
3,.clock()
4,measures
5,the
6,amount
7,of
8,CPU
9,time
10,that
11,has
12,been
13,used
14,by
15,the
16,current
17,process
18,","
19,so
20,it
21,'s
22,no
23,good
24,for
25,measuring
26,elapsed
27,time
28,from
29,some
30,point
31,in
32,the
33,past
34,.
35,On
36,Windows
37,it
38,will
39,measure
40,wall
41,-clock
42,seconds
43,elapsed
44,since
45,the
46,first
47,call
48,to
49,the
50,function
51,.
52,On
53,either
54,system
55,time
56,.time()
57,will
58,return
59,seconds
60,passed
61,since
62,the
63,epoch
64,.
65,If
66,you
67,'re
68,writing
69,code
70,that
71,'s
72,meant
73,only
74,for
75,Windows
76,","
77,either
78,will
79,work
80,(though
81,you
82,'ll
83,use
84,the
85,two
86,differently
87,-
88,no
89,subtraction
90,is
91,necessary
92,for
93,time
94,.clock()).
95,If
96,this
97,is
98,going
99,to
100,run
101,on
102,a
103,Unix
104,system
105,or
106,you
107,want
108,code
109,that
110,is
111,guaranteed
112,to
113,be
114,portable
115,","
116,you
117,will
118,want
119,to
120,use
121,time
122,.time().
