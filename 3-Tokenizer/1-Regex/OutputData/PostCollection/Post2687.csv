,0
0,Use
1,a
2,generic
3,type
4,to
5,indicate
6,that
7,you
8,'ll
9,be
10,returning
11,an
12,instance
13,of
14,"cls:
Any subclass overriding the class method but then returning an instance of a parent class (TrivialClass or a subclass that is still an ancestor)"
15,would
16,be
17,detected
18,as
19,an
20,error
21,","
22,because
23,the
24,factory
25,method
26,is
27,defined
28,as
29,returning
30,an
31,instance
32,of
33,the
34,type
35,of
36,cls
37,.
38,The
39,bound
40,argument
41,specifies
42,that
43,T
44,has
45,to
46,be
47,a
48,(subclass
49,of
50,)
51,TrivialClass
52,;
53,because
54,the
55,class
56,doesn
57,'t
58,yet
59,exist
60,when
61,you
62,define
63,the
64,generic
65,","
66,you
67,need
68,to
69,use
70,a
71,forward
72,reference
73,(a
74,string
75,with
76,the
77,name
78,).
79,See
80,the
81,Annotating
82,instance
83,and
84,class
85,methods
86,section
87,of
88,PEP
89,484
90,.
91,Note
92,:
93,The
94,first
95,revision
96,of
97,this
98,answer
99,advocated
100,using
101,a
102,forward
103,reference
104,naming
105,the
106,class
107,itself
108,as
109,the
110,return
111,value
112,","
113,but
114,issue
115,1212
116,made
117,it
118,possible
119,to
120,use
121,generics
122,instead
123,","
124,a
125,better
126,solution
127,.
