,0
0,I
1,don
2,'t
3,have
4,enough
5,experience
6,with
7,the
8,gdb
9,Python
10,api
11,to
12,call
13,this
14,an
15,answer
16,;
17,I
18,consider
19,this
20,just
21,some
22,research
23,notes
24,from
25,a
26,fellow
27,developer
28,.
29,My
30,code
31,attached
32,below
33,is
34,quite
35,crude
36,and
37,ugly
38,","
39,too
40,.
41,However
42,","
43,this
44,does
45,work
46,with
47,gdb
48,-7.4
49,and
50,python
51,-2.7.3.
52,An
53,example
54,debugging
55,"run:
All of the above are bog-standard pretty-printed outputs -- my reasoning is that I often want to see what the pointers are, so I didn't want to override those. However, dreferencing the pointers uses the prettyprinter shown further below:
The last line shows that when debugging tiny, tiny-gdb.py in the same directory gets loaded automatically (although you can disable this, I do believe this is the default behaviour)"
56,.
57,The
58,tiny
59,-gdb.py
60,file
61,used
62,for
63,"above:
The reasoning behind my choices are as follows:
How to install pretty-printers to gdb?
There are two parts to this question: where to install the Python files, and how to hook the pretty-printers to gdb.
Because the pretty-printer selection cannot rely on the inferred type alone, but has to peek into the actual data fields, you cannot use the regular expression matching functions. Instead, I chose to add my own pretty-printer selector function, typefilter()"
64,","
65,to
66,the
67,global
68,pretty
69,-printers
70,list
71,","
72,as
73,described
74,in
75,the
76,documentation
77,.
78,I
79,did
80,not
81,implement
82,the
83,enable
84,/disable
85,functionality
86,","
87,because
88,I
89,believe
90,it
91,is
92,easier
93,to
94,just
95,load
96,/not
97,load
98,the
99,relevant
100,Python
101,script
102,instead
103,.
104,(typefilter()
105,gets
106,called
107,once
108,per
109,every
110,variable
111,reference
112,","
113,unless
114,some
115,other
116,pretty
117,-printer
118,has
119,already
120,accepted
121,it
122,.)
123,The
124,file
125,location
126,issue
127,is
128,a
129,more
130,complicated
131,one
132,.
133,For
134,application
135,-specific
136,pretty
137,"-printers,"
138,putting
139,them
140,into
141,a
142,single
143,Python
144,script
145,file
146,sounds
147,sensible
148,","
149,but
150,for
151,a
152,library
153,","
154,some
155,splitting
156,seems
157,to
158,be
159,in
160,order
161,.
162,The
163,documentation
164,recommends
165,packaging
166,the
167,functions
168,into
169,a
170,Python
171,module
172,","
173,so
174,that
175,a
176,simple
177,python
178,import module
179,enables
180,the
181,pretty
182,-printer.
183,Fortunately
184,","
185,Python
186,packaging
187,is
188,quite
189,straightforward
190,.
191,If
192,you
193,were
194,to
195,import gdb
196,to
197,the
198,top
199,and
200,save
201,it
202,to
203,"/usr/lib/pythonX.Y/tiny.py,"
204,where
205,X
206,.Y
207,is
208,the
209,python
210,version
211,used
212,","
213,you
214,only
215,need
216,to
217,run
218,python
219,import tiny
220,in
221,gdb
222,to
223,enable
224,the
225,pretty
226,-printer.
227,Of
228,course
229,","
230,properly
231,packaging
232,the
233,pretty
234,-printer
235,is
236,a
237,very
238,good
239,idea
240,","
241,especially
242,if
243,you
244,intend
245,to
246,distribute
247,it
248,","
249,but
250,it
251,does
252,pretty
253,much
254,boil
255,down
256,to
257,adding
258,some
259,variables
260,et
261,cetera
262,to
263,the
264,beginning
265,of
266,the
267,script
268,","
269,assuming
270,you
271,keep
272,it
273,as
274,a
275,single
276,file
277,.
278,For
279,more
280,complex
281,pretty
282,"-printers,"
283,using
284,a
285,directory
286,layout
287,might
288,be
289,a
290,good
291,idea
292,.
293,If
294,you
295,have
296,a
297,value
298,val
299,","
300,then
301,val
302,.type
303,is
304,the
305,gdb
306,.Type
307,object
308,describing
309,its
310,type
311,;
312,converting
313,it
314,to
315,string
316,yields
317,a
318,human
319,-readable
320,type
321,name
322,.
323,val
324,.type.strip_typedefs()
325,yields
326,the
327,actual
328,type
329,with
330,all
331,typedefs
332,stripped
333,.
334,I
335,even
336,added
337,".unqualified(),"
338,so
339,that
340,all
341,const
342,/volatile/etc.
343,type
344,qualifiers
345,are
346,removed
347,.
348,NULL
349,pointer
350,detection
351,is
352,a
353,bit
354,tricky
355,.
356,The
357,best
358,way
359,I
360,found
361,","
362,was
363,to
364,examine
365,the
366,stringified
367,.address
368,member
369,of
370,the
371,target
372,gdb
373,.Value
374,object
375,","
376,and
377,see
378,if
379,it
380,is
381,"""0x0""."
382,To
383,make
384,life
385,easier
386,","
387,I
388,was
389,able
390,to
391,write
392,a
393,simple
394,deref
395,()
396,function
397,","
398,which
399,tries
400,to
401,dereference
402,a
403,pointer
404,.
405,If
406,the
407,target
408,points
409,to
410,(void
411,"*)0,"
412,it
413,returns
414,the
415,string
416,"""NULL"","
417,otherwise
418,it
419,returns
420,the
421,target
422,gdb
423,.Value
424,object
425,.
426,The
427,way
428,I
429,use
430,deref
431,()
432,is
433,based
434,on
435,the
436,fact
437,that
438,"""array"""
439,type
440,pretty
441,-printers
442,yield
443,a
444,list
445,of
446,2
447,"-tuples,"
448,where
449,the
450,first
451,item
452,is
453,the
454,name
455,string
456,","
457,and
458,the
459,second
460,item
461,is
462,either
463,a
464,gdb
465,.Value
466,object
467,","
468,or
469,a
470,string
471,.
472,This
473,list
474,is
475,returned
476,by
477,the
478,children
479,()
480,method
481,of
482,the
483,pretty
484,-printer
485,object
486,.
487,Handling
488,"""discriminated"
489,union
490,""""
491,types
492,would
493,be
494,much
495,easier
496,","
497,if
498,you
499,had
500,a
501,separate
502,type
503,for
504,the
505,generic
506,entity
507,.
508,That
509,is
510,","
511,if
512,you
513,had
514,and
515,it
516,was
517,used
518,everywhere
519,when
520,the
521,tag
522,value
523,is
524,still
525,uncertain
526,;
527,and
528,the
529,specific
530,structure
531,types
532,only
533,used
534,where
535,their
536,tag
537,value
538,is
539,fixed
540,.
541,This
542,would
543,allow
544,a
545,much
546,simpler
547,type
548,inference
549,.
550,As
551,it
552,is
553,","
554,in
555,tiny
556,.c
557,the
558,struct
559,box
560,*_st
561,types
562,can
563,be
564,used
565,interchangeably
566,.
567,"(Or,"
568,more
569,specifically
570,","
571,we
572,cannot
573,rely
574,on
575,a
576,specific
577,tag
578,value
579,based
580,on
581,the
582,type
583,alone
584,.)
585,The
586,sequence
587,case
588,is
589,actually
590,quite
591,simple
592,","
593,because
594,valtab
595,[]
596,can
597,be
598,treated
599,as
600,simply
601,as
602,an
603,array
604,of
605,void
606,pointers
607,.
608,The
609,sequence
610,tag
611,is
612,used
613,to
614,pick
615,the
616,correct
617,union
618,member
619,.
620,In
621,fact
622,","
623,if
624,valtab
625,[]
626,was
627,simply
628,a
629,void
630,pointer
631,array
632,","
633,then
634,gdb
635,.Value.cast(gdb.lookup_type())
636,or
637,gdb
638,.Value.reinterpret_cast(gdb.lookup_type())
639,can
640,be
641,used
642,to
643,change
644,each
645,pointer
646,type
647,as
648,necessary
649,","
650,just
651,like
652,I
653,do
654,for
655,the
656,boxed
657,structure
658,types
659,.
660,Recursion
661,limits
662,?
663,You
664,can
665,use
666,the
667,@
668,operator
669,in
670,print
671,command
672,to
673,specify
674,how
675,many
676,elements
677,are
678,printed
679,","
680,but
681,that
682,does
683,not
684,help
685,with
686,nesting
687,.
688,If
689,you
690,add
691,iseq3
692,->valtab[2]
693,=
694,(myval_t)iseq3;
695,to
696,tiny
697,".c,"
698,you
699,get
700,an
701,infinitely
702,recursive
703,sequence
704,.
705,gdb
706,does
707,print
708,it
709,nicely
710,","
711,especially
712,with
713,set
714,print
715,array
716,","
717,but
718,it
719,does
720,not
721,notice
722,or
723,care
724,about
725,the
726,recursion
727,.
728,In
729,my
730,opinion
731,","
732,you
733,might
734,wish
735,to
736,write
737,a
738,gdb
739,command
740,in
741,addition
742,to
743,a
744,pretty
745,-printer
746,for
747,deeply
748,nested
749,or
750,recursive
751,data
752,structures
753,.
754,During
755,my
756,testing
757,","
758,I
759,wrote
760,a
761,command
762,that
763,uses
764,Graphviz
765,to
766,draw
767,binary
768,tree
769,structures
770,directly
771,from
772,within
773,gdb
774,;
775,I
776,'m
777,absolutely
778,convinced
779,it
780,beats
781,plain
782,text
783,output
784,.
785,"Added: If you save the following as /usr/lib/pythonX.Y/tree.py:
you can use it in gdb:
If you have e.g.
and you have X11 (local or remote)"
786,connection
787,and
788,Graphviz
789,installed
790,","
791,you
792,can
793,use
794,to
795,view
796,the
797,tree
798,structure
799,.
800,Because
801,it
802,retains
803,a
804,list
805,of
806,already
807,visited
808,nodes
809,(as
810,a
811,Python
812,set
813,"),"
814,it
815,does
816,not
817,get
818,fazed
819,about
820,recursive
821,structures
822,.
823,I
824,probably
825,should
826,have
827,cleaned
828,my
829,Python
830,snippets
831,before
832,posting
833,","
834,but
835,no
836,matter
837,.
838,Please
839,do
840,consider
841,these
842,only
843,initial
844,testing
845,versions
846,;
847,use
848,at
849,your
850,own
851,risk
852,.
853,:)
