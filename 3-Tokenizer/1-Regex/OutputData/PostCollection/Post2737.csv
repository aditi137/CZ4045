,0
0,The
1,linear
2,increase
3,is
4,very
5,much
6,normal
7,","
8,if
9,the
10,database
11,has
12,to
13,process
14,your
15,queries
16,sequentially
17,.
18,Essentially
19,","
20,all
21,concurrent
22,requests
23,get
24,started
25,at
26,the
27,same
28,time
29,","
30,but
31,finish
32,one
33,after
34,another
35,","
36,so
37,","
38,assuming
39,a
40,pool
41,with
42,a
43,single
44,connection
45,","
46,60ms
47,per
48,request
49,","
50,and
51,10
52,concurrent
53,requests
54,","
55,you
56,'re
57,going
58,to
59,see
60,requests
61,taking
62,60ms
63,","
64,120ms
65,","
66,180ms
67,","
68,240ms
69,","
70,300ms
71,","
72,360ms
73,","
74,420ms
75,","
76,480ms
77,","
78,540ms
79,","
80,600ms
81,","
82,600ms
83,","
84,"...,"
85,600ms
86,","
87,540ms
88,","
89,480ms
90,","
91,...
92,.
93,We
94,can
95,calculate
96,how
97,much
98,time
99,it
100,takes
101,for
102,the
103,average
104,request
105,","
106,given
107,n
108,requests
109,and
110,m
111,concurrent
112,"requests:
These numbers are similar to what you are seeing.
Now comes the big question. Why does the database process queries almost sequentially? I can think of a few reasons:
Locking: each started transaction needs to lock some resource exclusively so only one (or few)"
113,transaction
114,can
115,run
116,at
117,a
118,time
119,CPU
120,-bound
121,query
122,:
123,each
124,transaction
125,takes
126,significant
127,CPU
128,resources
129,so
130,other
131,transactions
132,must
133,wait
134,for
135,CPU
136,time
137,Large
138,table
139,scans
140,:
141,the
142,database
143,cannot
144,keep
145,the
146,entirety
147,of
148,the
149,table
150,in
151,memory
152,and
153,therefore
154,must
155,read
156,from
157,disk
158,for
159,every
160,transaction
161,How
162,do
163,you
164,fix
165,this
166,?
167,This
168,is
169,a
170,complicated
171,question
172,","
173,but
174,a
175,few
176,potential
177,solutions
178,:
179,Optimize
180,your
181,queries
182,;
183,either
184,optimize
185,it
186,so
187,that
188,they
189,don
190,'t
191,all
192,fight
193,for
194,the
195,same
196,resource
197,","
198,or
199,","
200,optimize
201,it
202,so
203,that
204,they
205,don
206,'t
207,take
208,as
209,long
210,Batch
211,your
212,queries
213,so
214,that
215,you
216,need
217,to
218,run
219,fewer
220,in
221,total
222,Cache
223,your
224,responses
225,so
226,that
227,they
228,don
229,'t
230,hit
231,the
232,database
233,at
234,all
