,0
0,I
1,am
2,trying
3,to
4,use
5,a
6,Neural
7,network
8,for
9,a
10,classification
11,problem
12,.
13,I
14,have
15,6
16,possible
17,classes
18,and
19,the
20,same
21,input
22,may
23,be
24,in
25,more
26,than
27,one
28,class
29,.
30,The
31,problem
32,is
33,that
34,when
35,I
36,try
37,to
38,train
39,one
40,NN
41,for
42,each
43,class
44,","
45,I
46,set
47,output_num_units = 1
48,and
49,on
50,train
51,","
52,I
53,pass
54,the
55,first
56,column
57,of
58,y
59,","
60,y
61,"[:,0]."
62,I
63,get
64,the
65,following
66,output
67,and
68,"error:
If I try to use output_num_units=num_class (6)"
69,and
70,the
71,full
72,y
73,(all
74,six
75,fields
76,"),"
77,first
78,I
79,get
80,an
81,error
82,of
83,the
84,KStratifiedFold
85,","
86,because
87,it
88,seems
89,that
90,it
91,does
92,not
93,expect
94,y
95,to
96,have
97,multiple
98,rows
99,.
100,If
101,I
102,set
103,eval_size=None
104,","
105,than
106,I
107,get
108,the
109,following
110,"error:
The only configuration that is working is setting more than one output unit and passing only one column to y. Than it trains the NN, but is does not seem to be right as it is giving me 2 output layers, and I have only one Y to compare to.
What am I doing wrong? Why can't I use only one output? Should I convert my y classes from a vector of 6 columns to a vector of only one column with a number?
I use the following code (extract)"
111,:
