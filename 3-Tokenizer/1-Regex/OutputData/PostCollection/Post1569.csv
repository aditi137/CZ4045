If,your,problems,allows,transitive,relations,",",i.e.,x,is,in,the,group,as,long,as,it's,at,most,7,away,from,any,element,in,the,group,",",then,this,seems,to,me,like,a,graph,theory,problem,.,To,be,more,specific,",",you,need,to,find,all,connected,components,.,The,problem,itself,is,pretty,easy,to,solve,with,a,recursive,algorithms,.,You,would,first,create,a,dictionary,in,which,every,key,would,be,one,of,the,elements,and,every,value,would,be,a,list,of,elements,which,are,at,most,7,apart,from,that,element,.,For,your,example,",",you,would,have,something,like,this,:,Which,would,give,you,something,like,this,Now,you,need,to,write,a,recursive,function,which,will,take,as,input,an,element,and,a,list,",",and,it,will,keep,adding,elements,in,a,list,as,long,as,it,can,find,an,element,which,is,at,most,7,apart,from,the,current,element,.,Somewhere,in,the,code,you,also,need,to,remember,which,elements,you,have,already,visited,to,make,sure,that,you,don't,get,into,an,infinite,loop,.,You,need,to,call,that,function,for,every,element,in,your,list,.,This,code,should,give,the,following,output,for,your,input,:
