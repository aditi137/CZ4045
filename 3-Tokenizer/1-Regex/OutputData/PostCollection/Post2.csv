,0
0,There
1,are
2,drawbacks
3,of
4,using
5,reference
6,counting
7,.
8,One
9,of
10,the
11,most
12,mentioned
13,is
14,circular
15,"references: Suppose A references B, B references C and C references B. If A were to drop its reference to B, both B and C will still have a reference count of 1 and won't be deleted with traditional reference counting. CPython (reference counting is not part of python itself, but part of the C implementation thereof)"
16,catches
17,circular
18,references
19,with
20,a
21,separate
22,garbage
23,collection
24,routine
25,that
26,it
27,runs
28,periodically
29,...
30,Another
31,"drawback: Reference counting can make execution slower. Each time an object is referenced and dereferenced, the interpreter/VM must check to see if the count has gone down to 0 (and then deallocate if it did)"
32,.
33,Garbage
34,Collection
35,does
36,not
37,need
38,to
39,do
40,this
41,.
42,Also
43,","
44,Garbage
45,Collection
46,can
47,be
48,done
49,in
50,a
51,separate
52,thread
53,(though
54,it
55,can
56,be
57,a
58,bit
59,tricky
60,).
61,On
62,machines
63,with
64,lots
65,of
66,RAM
67,and
68,for
69,processes
70,that
71,use
72,memory
73,only
74,slowly
75,","
76,you
77,might
78,not
79,want
80,to
81,be
82,doing
83,GC
84,at
85,all
86,!
87,Reference
88,counting
89,would
90,be
91,a
92,bit
93,of
94,a
95,drawback
96,there
97,in
98,terms
99,of
100,performance
101,...
