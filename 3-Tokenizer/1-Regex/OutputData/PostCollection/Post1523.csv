,0
0,In
1,the
2,first
3,query
4,","
5,your
6,variables
7,are
8,identifiers
9,","
10,whereas
11,in
12,the
13,second
14,they
15,'re
16,literal
17,strings
18,.
19,You
20,shouldn
21,'t
22,be
23,putting
24,parenthesis
25,with
26,the
27,identifiers
28,","
29,and
30,they
31,shouldn
32,'t
33,be
34,wrapped
35,in
36,single
37,quotes
38,unless
39,you
40,further
41,wrap
42,them
43,with
44,double
45,quotes
46,.
47,For
48,instance
49,","
50,this
51,would
52,create
53,a
54,table
55,called
56,'foo'
57,rather
58,than
59,"foo:
And these would all spit out errors:
If you really want to use parameters for identifiers, you'll need to use a dynamic SQL statement. In this case, you'll also need to worry about quoting the identifiers using PG if applicable, e.g.:
In the above, the outer string is delimited by $$, and the inner strings are delimited by '. After parameters get replaced, it'll look like:
And then:
And finally:
This particular statement of yours, however, cannot be part of a transaction so cannot go in a do statement. As such, you'll need to resort to doing the string manipulation in Python directly.
What quote_ident()"
60,does
61,is
62,","
63,in
64,essence
65,","
66,wrap
67,in
68,double
69,quotes
70,after
71,doubling
72,all
73,double
74,quotes
75,in
76,the
77,input
78,.
79,For
80,instance
81,:
82,I
83,'m
84,not
85,familiar
86,enough
87,with
88,Python
89,to
90,write
91,that
92,for
93,you
94,","
95,but
96,that
97,'s
98,basically
99,the
100,subroutine
101,you
102,'ll
103,need
104,to
105,make
106,it
107,work
108,.
109,Then
110,pass
111,the
112,final
113,SQL
114,string
115,—
116,with
117,the
118,parameters
119,in
120,it
121,replaced
122,—
123,to
124,Postgres
125,directly
126,.
