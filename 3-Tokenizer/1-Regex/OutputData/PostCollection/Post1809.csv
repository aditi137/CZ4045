,0
0,I
1,have
2,a
3,list
4,(actually
5,I
6,'d
7,like
8,to
9,make
10,it
11,a
12,1D
13,numpy
14,array
15,)
16,whose
17,first
18,and
19,last
20,element
21,will
22,remain
23,constant
24,but
25,whose
26,other
27,elements
28,are
29,objects
30,of
31,an
32,optimisation
33,","
34,i
35,.e
36,will
37,change
38,often
39,and
40,need
41,to
42,be
43,in
44,a
45,separate
46,variable
47,(because
48,scipy
49,.optimize.leastsq()
50,needs
51,it
52,that
53,way
54,).
55,So
56,I
57,'ve
58,got
59,this
60,code
61,to
62,put
63,the
64,constant
65,"""outer"""
66,elements
67,together
68,with
69,the
70,changing
71,"ones:
This looks very unelegant to me, and I'm convinced there must be a way to do this in just one line that defines
For background, I need this because I have an error function for leastsq that takes a 1D array of which only the inner elements are optimized. I am feeding the result of the above to a lambda function, together with other parameters to the error function, so that I can pass only the stuff that changes to leastsq:
because I am using the same error function for different types of optimisation (there are different aspects and different types of constraints that the function can be fitted to)"
72,","
73,I
74,do
75,not
76,want
77,to
78,re
79,-write
80,the
81,error
82,function
83,for
84,a
85,specific
86,purpose
87,.
