Darren,Thomas,gives,a,good,answer,.,However,",",one,big,difference,between,the,Java,and,Python,approaches,is,that,with,reference,counting,in,the,common,case,(,no,circular,references,),objects,are,cleaned,up,immediately,rather,than,at,some,indeterminate,later,date,.,For,example,",",I,can,write,sloppy,",",non-portable,code,in,CPython,such,as,and,the,file,descriptor,for,that,file,I,opened,will,be,cleaned,up,immediately,because,as,soon,as,the,reference,to,the,open,file,goes,away,",",the,file,is,garbage,collected,and,the,file,descriptor,is,freed,.,Of,course,",",if,I,run,Jython,or,IronPython,or,possibly,PyPy,",",then,the,garbage,collector,won't,necessarily,run,until,much,later,;,possibly,I'll,run,out,of,file,descriptors,first,and,my,program,will,crash,.,So,you,SHOULD,be,writing,code,that,looks,like,but,sometimes,people,like,to,rely,on,reference,counting,to,always,free,up,their,resources,because,it,can,sometimes,make,your,code,a,little,shorter,.,I'd,say,that,the,best,garbage,collector,is,the,one,with,the,best,performance,",",which,currently,seems,to,be,the,Java-style,generational,garbage,collectors,that,can,run,in,a,separate,thread,and,has,all,these,crazy,optimizations,",",etc.,The,differences,to,how,you,write,your,code,should,be,negligible,and,ideally,non-existent,.
