The
awkwardness
arises
from
trying
to
take
advantage
of
the
:
-
n
syntax
.
Since
there's
no
difference
between
:
0
and
:
-
0
","
we
can't
use
this
syntax
to
distinguish
0
from
the
start
from
0
from
the
end
.
In
this
case
it
is
clearer
to
use
the
:
i
indexing
","
and
adjust
the
range
accordingly
:
arr
[
:
None
]
means
0
from
the
end
","
and
usually
is
sufficient
.
Keep
in
mind
the
arr
[
:
i
]
translates
to
"arr.__getitem__(slice(None,i,None)"
)
.
The
:
syntax
is
short
hand
for
a
slice
object
.
And
the
slice
signature
is
:
slice
itself
is
pretty
simple
.
It's
the
__getitem__
method
that
gives
it
meaning
.
You
could
","
in
theory
","
subclass
list
","
and
give
it
a
custom
__getitem__
that
treats
"slice(None,0,None)"
as
"slice(None,None,None)"
.
