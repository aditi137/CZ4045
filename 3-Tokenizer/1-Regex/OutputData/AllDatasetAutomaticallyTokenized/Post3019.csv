The
start
/
stop
functionality
is
simple
-
just
make
the
button
control
something
like
an
operation_is_stopped
flag
persisted
across
requests
(
in
the
datastore
","
for
example
)
.
In
case
you
didn't
realize
it
yet
your
difficulty
really
comes
from
achieving
the
continuous
operation
that
you
want
to
control
with
that
button
.
That's
what's
not
really
compatible
with
GAE
-
everything
in
GAE
revolves
around
responding
to
requests
","
in
a
limited
amount
of
time
.
You
can
not
really
have
indefinitely-running
proceses
/
threads
in
GAE
.
But
in
many
cases
it's
possible
to
implement
a
long-running
","
iterative
continuous
operation
(
like
yours
)
as
a
flow
of
short-lived
operations
.
In
GAE
that
can
be
easily
achieved
using
the
task
queues
-
each
iteration
(
in
your
case
the
body
of
the
while
self._running
=
=
True
loop
)
is
implemented
as
a
response
to
a
task
queue
request
.
The
flow
is
started
by
enqueueing
a
respective
task
when
the
""""
start
""""
action
is
triggered
.
The
flow
is
maintained
by
enqueueing
a
respective
task
after
processing
of
a
previous
task
request
.
And
it's
stopped
by
not
enqueueing
a
new
task
:
)
Something
along
these
lines
:
