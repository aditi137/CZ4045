Facebook
needed
a
scalable
server
so
they
wrote
Tornado
(
which
uses
async
)
.
Twisted
is
also
famously
scalable
(
it
also
uses
async
)
.
Gunicorn
is
also
a
top
performer
(
it
uses
multiple
processes
)
.
None
of
the
fast
","
scalable
tools
that
I
know
about
uses
threading
.
An
easy
way
to
experiment
with
the
different
approaches
is
to
start
with
the
SocketServer
module
in
the
standard
library
:
http://docs.python.org/library/socketserver.html
.
It
lets
you
easily
switch
approaches
by
alternately
inheriting
from
either
ThreadingMixin
or
ForkingMixin
.
Also
","
if
you're
interested
in
learning
about
the
async
approach
","
the
easiest
way
to
build
your
understanding
is
to
read
a
blog
post
discussing
the
implementation
of
Tornado
:
http://golubenco.org/2009/09/19/understanding-the-code-inside-tornado-the-asynchronous-web-server-powering-friendfeed/
Good
luck
and
happy
computing
:
-
)
