On
Unix
time.clock()
measures
the
amount
of
CPU
time
that
has
been
used
by
the
current
process
","
so
it's
no
good
for
measuring
elapsed
time
from
some
point
in
the
past
.
On
Windows
it
will
measure
wall-clock
seconds
elapsed
since
the
first
call
to
the
function
.
On
either
system
time.time()
will
return
seconds
passed
since
the
epoch
.
If
you're
writing
code
that's
meant
only
for
Windows
","
either
will
work
(
though
you'll
use
the
two
differently
-
no
subtraction
is
necessary
for
time.clock()
)
.
If
this
is
going
to
run
on
a
Unix
system
or
you
want
code
that
is
guaranteed
to
be
portable
","
you
will
want
to
use
time.time()
.
