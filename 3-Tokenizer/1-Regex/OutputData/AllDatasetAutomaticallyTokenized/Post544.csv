Perl
6
has
some
great
features
over
python
.
I
think
these
are
all
features
that
Python
3
doesn't
have
:
an
extensible
","
but
optional
type
system
including
multi-method
dispatch
and
type
checking
even
for
builtins
and
""""
operators
""""
with
subset
types
Roles
:
Non-instantiable
classes
for
code
reuse
(
aka
mixins
)
with
some
additional
advantages
over
most
mixins
:
compile-time
method
name
collision
checking
","
the
ability
to
require
","
in
a
role
definition
","
that
certain
methods
are
present
in
the
host
class
","
and
subsequently
to
call
methods
of
the
host
class
in
the
implementation
of
the
role
.
Grammars
(
compositions
of
regexes
that
return
structured
data
)
Powerful
extended
regexes
.
Fancier
than
python's
built-in
regex
capabilities
.
Junctions
and
type
junctions
Metaoperators
The
ability
to
define
circumfix
","
postcircumfix
","
infix
","
prefix
","
and
postfix
operators
.
Theoretically
","
the
ability
to
work
with
the
AST
as
structured
data
.
(
Aka
:
lisp
macros
)
Block
scoping
The
*
term
for
generating
closures
out
of
any
expression
Implicit
concurrency
constructs
(
[]
meta
","
junctions
)
Declarative
concurrency
constructs
(
hyper
for
)
The
MAIN
sub
turns
its
function
signature
into
a
command
line
interface
and
a
command
line
usage
guide
.
Lazy
lists
(
but
you
can
roll
your
own
with
generators
)
And
it
shares
with
Python
the
following
advantages
over
Perl
5
:
The
concept
of
a
""""
class
""""
","
the
class
keyword
","
and
associated
sugar
*
*
:
The
self
keyword
getter
/
setter
sugar
with
the
concept
of
private
data
a
well
defined
","
accessible
meta-object
protocol
great
unicode
support
great
date
/
time
support
built
in
In
general
","
""""
batteries
included
""""
-
lots
of
builtin
functions
non-globally
scoped
variables
by
default
Perl6's
implementation
is
not
100
%
complete
","
or
tuned
enough
to
use
for
certain
values
of
""""
performance
sensitive
""""
applications
.
But
the
80-90
%
of
the
spec
that
is
needed
for
95-99
%
of
use
cases
is
complete
in
Rakudo
","
right
now
*
*
One
glaring
omission
is
any
provision
for
asynchronous
I
/
O
.
That
part
of
the
spec
is
in
flux
.
*
*
Though
the
popular
Moose
project
provides
this
in
Perl
5
.
