You
are
using
augmented
assignment
.
For
an
immutable
type
like
an
integer
","
you
are
essentially
doing
the
same
thing
as
this
:
The
self.empCount
retrieves
either
an
instance
attribute
(
if
it
exists
)
or
a
class
attribute
.
Because
there
is
no
such
instance
attribute
","
it
is
the
class
attribute
(
set
to
0
)
that
is
retrieved
and
1
is
assigned
to
self.empCount
.
Assignment
to
an
instance
attribute
always
sets
an
instance
attribute
","
never
the
class
attribute
.
Each
of
your
instances
thus
ends
up
with
self.empCount
set
to
1
and
the
class
attribute
never
changes
.
Note
that
even
if
empCount
was
a
mutable
type
","
such
as
a
list
","
the
assignment
would
give
you
an
instance
attribute
anyway
","
even
if
the
augmented
assignment
also
mutated
the
class
attribute
.
See
Why
does
+
=
behave
unexpectedly
on
lists
?
Augmented
assignment
on
non-existing
instance
attributes
is
rarely
a
good
idea
.
","
because
the
augmented
assignment
does
this
:
Note
the
explicit
assignment
to
the
self.empCount
attribute
.
If
you
wanted
to
increment
the
class
attribute
","
you
need
to
do
so
explicitly
:
