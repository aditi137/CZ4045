The
main
problems
with
indentation
occur
when
you
mix
tabs
and
spaces
.
Obviously
this
doesn't
tell
you
which
you
should
choose
","
but
it
is
a
good
reason
to
to
recommend
one
","
even
if
you
pick
it
by
flipping
a
coin
.
However
","
IMHO
there
are
a
few
minor
reasons
to
favour
spaces
over
tabs
:
Different
tools
.
Sometimes
code
gets
displayed
outside
of
a
programmer's
editor
.
Eg
.
posted
to
a
newsgroup
or
forum
.
Spaces
generally
do
better
than
tabs
here
-
everywhere
spaces
would
get
mangled
","
tabs
do
as
well
","
but
not
vice-versa
.
Programmers
see
the
source
differently
.
This
is
deeply
subjective
-
its
either
the
main
benefit
of
tabs
","
or
a
reason
to
avoid
them
depending
on
which
side
you're
on
.
On
the
plus
side
","
developers
can
view
the
source
with
their
preferred
indentation
","
so
a
developer
preferring
2-space
indent
can
work
with
an
8-space
developer
on
the
same
source
and
still
see
it
as
they
like
.
The
downside
is
that
there
are
repercussions
to
this
-
some
people
like
8-space
because
it
gives
very
visible
feedback
that
they're
too
deeply
nested
-
they
may
see
code
checked
in
by
the
2-indenter
constantly
wrapping
in
their
editor
.
Having
every
developer
see
the
code
the
same
way
leads
to
more
consistency
wrt
line
lengths
","
and
other
matters
too
.
Continued
line
indentation
.
Sometimes
you
want
to
indent
a
line
to
indicate
it
is
carried
from
the
previous
one
.
eg
.
If
using
tabs
","
theres
no
way
to
align
this
for
people
using
different
tabstops
in
their
editor
without
mixing
spaces
and
tabs
.
This
effectively
kills
the
above
benefit
.
Obviously
though
","
this
is
a
deeply
religious
issue
","
which
programming
is
plagued
with
.
The
most
important
issue
is
that
we
should
choose
one
-
even
if
thats
not
the
one
you
favour
.
Sometimes
I
think
that
the
biggest
advantage
of
significant
indentation
is
that
at
least
we're
spared
brace
placement
flamewars
.
Also
worth
reading
is
this
article
by
Jamie
Zawinski
on
the
issue
.
