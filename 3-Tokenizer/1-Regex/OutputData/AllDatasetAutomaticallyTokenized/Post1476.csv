Check
whether
it
is
an
instance
of
types.FunctionType
:
Probably
you'd
be
safer
to
check
for
"isinstance(X, (types.FunctionType, types.LambdaType)"
.
C
functions
are
instances
of
builtin_function_or_method
:
You
can
access
this
type
as
types.BuiltinFunctionType
/
types.BuiltinMethodType
.
Alternatively
you
can
check
whether
the
function
has
a
__code__
attribute
.
Since
C
functions
do
not
have
bytecode
","
they
can't
have
__code__
.
Note
sometimes
what
seems
like
a
function
is
actually
a
class
","
e.g
.
enumerate
but
some
3rd
party
library
may
do
the
same
.
This
means
that
you
should
also
check
whether
a
class
is
implemented
in
C
or
not
.
This
one
is
harder
since
all
classes
are
instances
of
type
.
A
way
may
be
to
check
whether
the
class
has
a
__dict__
in
its
dir
","
and
if
it
doesn't
have
you
should
check
for
__slots__
.
Something
like
the
following
should
be
pretty
accurate
:
Example
usage
:
