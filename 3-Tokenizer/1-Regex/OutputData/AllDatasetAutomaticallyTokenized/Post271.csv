Dynamic
languages
are
fantastic
for
prototyping
ideas
.
Often
for
performance
reasons
they
won't
work
for
permanent
solutions
or
products
.
But
","
with
languages
like
Python
","
which
allow
you
to
embed
standard
C
/
C
+
+
/
Java
inside
them
or
visa
versa
","
you
can
speed
up
the
really
critical
bits
but
leave
it
glued
together
with
the
flexibility
of
a
dynamic
language
.
...
and
so
you
get
the
best
of
both
worlds
.
If
you
need
to
justify
this
in
terms
of
why
more
people
should
learn
these
languages
","
just
point
out
much
faster
you
can
develop
the
same
software
and
how
much
more
robust
the
solution
is
(
because
debugging
/
fixing
problems
in
dynamic
languages
is
in
my
experience
","
considerably
easier
!
)
.
