Knowing
grep
and
ruby
made
it
possible
to
narrow
down
a
problem
","
and
verify
the
fix
for
","
an
issue
involving
tons
of
java
exceptions
on
some
production
servers
.
Because
I
threw
the
solution
together
in
ruby
","
it
was
done
(
designed
","
implemented
","
tested
","
run
","
bug-fixed
","
re-run
","
enhanced
","
results
analyzed
)
in
an
afternoon
instead
of
a
couple
of
days
.
I
could
have
solved
the
same
problem
using
an
all-java
solution
or
a
C
#
solution
","
but
it
most
likely
would
have
taken
me
longer
.
Having
dynamic
language
expertise
also
sometimes
leads
you
to
simpler
solutions
in
less
dynamic
languages
.
In
ruby
","
perl
or
python
","
you
just
intuitively
reach
for
associative
arrays
(
hashes
","
dictionaries
","
whatever
word
you
want
to
use
)
for
the
smallest
things
","
where
you
might
be
tempted
to
create
a
complex
class
hierarchy
in
a
statically
typed
language
when
the
problem
doesn't
necessarily
demand
it
.
Plus
you
can
plug
in
most
scripting
languages
into
most
runtimes
.
So
it
doesn't
have
to
be
either
/
or
.
