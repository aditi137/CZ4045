Python
evaluates
whatever
expression
follows
the
return
statement
","
and
the
result
of
the
evaluation
is
what
is
returned
.
You
have
used
two
boolean
expressions
:
This
evaluates
to
True
if
both
a
<
0
and
b
<
0
;
otherwise
it
evaluates
to
False
This
evaluates
to
True
if
either
of
the
parentheses
evaluate
to
True
;
otherwise
it
evaluates
to
False
which
is
what
you
want
.
So
pos_neg
automatically
returns
either
True
or
False
depending
on
the
specified
inputs
.
Perhaps
you
were
thinking
of
testing
each
condition
for
True
/
False
","
then
using
an
if
statement
to
return
True
if
the
condition
is
True
and
to
return
False
if
the
condition
is
False
.
That
would
work
","
but
would
be
unnecessarily
long
and
complex
.
Here
","
you
are
just
returning
with
whatever
the
boolean
value
of
each
expression
works
out
to
be
","
whether
it's
True
or
False
.
