I'd
suggest
looking
into
a
thread
pool
","
and
having
the
threads
take
tasks
from
a
suitable
shared
data
structure
(
e.g
.
a
queue
)
rather
than
starting
new
threads
all
the
time
.
Depending
on
what
it
is
you
actually
want
to
do
","
if
you're
using
CPython
(
if
you
don't
know
what
I
mean
by
CPython
","
you
will
be
)
you
might
not
actually
get
any
performance
improvement
from
using
threads
(
due
to
global
interpreter
lock
)
.
So
you
might
be
better
off
looking
into
the
multiprocessing
module
.
