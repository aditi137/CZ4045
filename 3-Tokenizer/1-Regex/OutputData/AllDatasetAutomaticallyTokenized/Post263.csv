Learning
a
new
language
is
a
long-term
process
.
In
a
couple
of
days
you'll
learn
the
basics
","
yes
.
But
!
As
you
probably
know
","
the
real
practical
applicability
of
any
language
is
tied
to
the
standard
library
and
other
available
components
.
Learning
how
to
use
the
efficiently
requires
a
lot
of
hands-on
experience
.
Perhaps
the
only
immediate
short-term
benefit
is
that
developers
learn
to
distinguish
the
nails
that
need
a
Python
/
Perl
/
Ruby
-
hammer
.
And
","
if
they
are
any
good
","
they
can
then
study
some
more
(
online
","
perhaps
!
)
and
become
real
experts
.
The
long-term
benefits
are
easier
to
imagine
:
The
employee
becomes
a
better
developer
.
Better
developer
=
>
better
quality
.
We
are
living
in
a
knowledge
economy
these
days
.
It's
wiser
to
invest
in
those
brains
that
already
work
for
you
.
It
is
easier
to
adapt
when
the
next
big
language
emerges
.
It
is
very
likely
that
the
NBL
will
have
many
of
the
features
present
in
today's
scripting
languages
:
first-class
functions
","
closures
","
streams
/
generators
","
etc.
New
market
possibilities
and
ability
to
respond
more
quickly
.
Even
if
you
are
not
writing
Python
","
other
people
are
.
Your
clients
?
Another
vendor
in
the
project
?
Perhaps
a
critical
component
was
written
in
some
other
language
?
It
will
cost
money
and
time
","
if
you
do
not
have
people
who
can
understand
the
code
and
interface
with
it
.
Recruitment
.
If
your
company
has
a
reputation
of
teaching
new
and
interesting
stuff
to
people
","
it
will
be
easier
to
recruit
the
top
people
.
Everyone
is
doing
Java
/
C
#
/
C
+
+
.
It
is
not
a
very
effective
way
to
differentiate
yourself
in
the
job
market
.
