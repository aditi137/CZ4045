You
could
memoize
expensive(x)
(
and
if
you
are
calling
expensive(x)
frequently
","
you
probably
should
memoize
it
any
way
.
This
page
gives
an
implementation
of
memoize
for
python
:
http://code.activestate.com/recipes/52201/
This
has
the
added
benefit
that
expensive(x)
may
be
run
less
than
N
times
","
since
any
duplicate
entries
will
make
use
of
the
memo
from
the
previous
execution
.
Note
that
this
assumes
expensive(x)
is
a
true
function
","
and
does
not
depend
on
external
state
that
may
change
.
If
expensive(x)
does
depend
on
external
state
","
and
you
can
detect
when
that
state
changes
","
or
you
know
it
wont
change
during
your
list
comprehension
","
then
you
can
reset
the
memos
before
the
comprehension
.
