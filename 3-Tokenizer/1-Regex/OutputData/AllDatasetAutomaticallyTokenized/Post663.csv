Just
write
an
appropriate
__lt__
method
for
the
objects
in
the
list
so
they
sort
correctly
:
Only
__lt__
is
needed
by
Python
for
sorting
","
though
it's
a
good
idea
to
define
all
of
the
comparisons
or
use
functools.total_ordering
.
You
can
see
that
it
is
working
by
using
two
items
with
the
same
first
value
and
different
second
values
.
The
two
objects
will
swap
places
when
you
heapify
no
matter
what
the
second
values
are
because
lst
[0]
<
lst
[1]
will
always
be
False
.
If
you
need
the
heapify
to
be
stable
","
you
need
a
more
complex
comparison
.
