The
problem
you
have
is
not
that
Python
thinks
that
debian
/
control
does
not
exist
","
but
rather
that
it
seems
like
deb_pkg_tools.control
does
not
exist
.
I
would
use
the
python-debian
package
from
Debian
to
parse
the
control
file
if
I
were
you
.
Here
is
the
code
that
will
parse
the
control
file
to
get
the
dependencies
.
It
should
work
even
for
packages
with
multiple
binary
packages
.
Each
item
in
the
above
example
is
a
tuple
that
pairs
the
""""
key
""""
with
the
""""
value
""""
","
so
item
[0]
gives
us
the
""""
key
""""
and
item
[1]
gives
us
the
""""
value
""""
.
Obviously
the
above
sample
just
prints
out
the
dependencies
as
they
are
in
the
control
file
","
so
the
dependencies
aren't
in
a
format
that
is
suitable
to
directly
plug
into
apt-get
install
.
Also
","
by
parsing
the
control
file
","
I
got
stuff
like
${python:Depends
}
in
addition
to
actual
package
names
","
so
that
is
something
you
will
have
to
consider
.
Here
is
an
example
of
the
output
I
got
from
the
above
example
:
I
found
this
bug
report
and
the
python-debian
source
code
to
be
quite
useful
resources
when
answering
your
question
.
