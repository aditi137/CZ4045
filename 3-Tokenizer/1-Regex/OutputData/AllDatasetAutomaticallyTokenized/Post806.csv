In
lieu
of
full-text
search
on
GAE
I'm
using
the
solution
below
to
return
a
resultset
that's
sorted
","
first
by
keyword
relevance
","
and
secondly
by
date
(
though
the
second
sorting
could
be
anything
really
)
.
It
feels
a
bit
bulky
and
I'm
concerned
about
performance
at
scale
so
I'm
looking
for
optimization
suggestions
or
a
different
approach
altogether
.
The
secondary
sorting
is
important
to
my
use
case
","
since
a
given
search
will
likely
have
multple
results
of
the
same
relevance
(
as
measured
by
the
number
of
keyword
matches
)
","
but
preserving
the
original
query
ordering
adds
a
lot
of
complexity
right
now
.
Any
ideas
?
Step
1
:
Get
a
list
of
keys
that
match
each
search
term
Step
2
:
Group
the
list
by
frequency
while
maintaining
the
original
order
