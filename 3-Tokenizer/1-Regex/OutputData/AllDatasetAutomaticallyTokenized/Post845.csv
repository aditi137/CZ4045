By
""""
normal
array
""""
I
take
it
you
mean
a
NumPy
array
of
homogeneous
dtype
.
Given
a
recarray
","
such
as
:
we
must
first
make
each
column
have
the
same
dtype
.
We
can
then
convert
it
to
a
""""
normal
array
""""
by
viewing
the
data
by
the
same
dtype
:
astype
returns
a
new
numpy
array
.
So
the
above
requires
additional
memory
in
an
amount
proportional
to
the
size
of
a
.
Each
row
of
a
requires
4+8+4=16
bytes
","
while
a.astype(...)
requires
8*3=24
bytes
.
Calling
view
requires
no
new
memory
","
since
view
just
changes
how
the
underlying
data
is
interpreted
.
a.tolist()
returns
a
new
Python
list
.
Each
Python
number
is
an
object
which
requires
more
bytes
than
its
equivalent
representation
in
a
numpy
array
.
So
a.tolist()
requires
more
memory
than
a.astype(...)
.
Calling
a.astype(...)
.
view(...)
is
also
faster
than
np.array(a.tolist()
)
:
