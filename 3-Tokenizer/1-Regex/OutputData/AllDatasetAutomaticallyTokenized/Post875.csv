I've
just
begun
learning
sockets
with
Python
.
So
I've
written
some
examples
of
chat
servers
and
clients
.
Most
of
what
I've
seen
on
the
internet
seems
to
use
threading
module
for
(
asynchronous
)
handling
of
clients
'
connections
to
server
.
I
do
understand
that
for
scalable
server
you
need
to
use
some
additional
tricks
","
because
thousands
of
threads
can
kill
the
server
(
correct
me
if
I'm
wrong
","
but
is
it
due
to
GIL
?
)
","
but
that's
not
my
concern
at
the
moment
.
The
strange
thing
is
that
I've
found
somewhere
in
Python
documentation
that
creating
subprocesses
is
the
right
way
(
unfortunelty
I've
lost
the
reference
","
sorry
:
(
)
for
handling
sockets
.
So
the
question
is
:
to
use
threading
or
multiprocessing
?
Or
is
there
even
better
solution
?
Please
","
give
me
the
answer
and
explain
the
difference
to
me
.
By
the
way
:
I
do
know
that
there
are
things
like
Twisted
which
are
well-written
.
I'm
not
looking
for
pre-made
scalable
server
","
I
am
instead
trying
to
understand
how
to
write
one
that
can
be
scaled
or
will
deal
with
at
least
10k
clients
.
EDIT
:
The
operating
system
is
Linux
.
