You're
bound
to
get
some
level
of
opinion
on
a
question
like
this
-
-
My
answer
is
to
use
inheritance
iff
your
classes
are
designed
to
be
inherited
.
Use
composition
in
all
the
other
cases
.
In
practice
","
this
usually
means
that
if
the
code
that
you
are
extending
exists
in
a
realm
out
of
your
control
","
don't
subclass
it
unless
their
documentation
talks
about
how
you
can
subclass
it
effectively
.
In
this
case
","
since
it
seems
like
you
are
the
author
of
the
class
hierarchy
","
inheritance
seems
to
make
sense
(
though
some
of
your
assertions
are
incorrect
-
-
D
is
not
so
easy
to
implement
as
you
have
supposed
since
none
of
the
superclass
__init__
will
get
called
)
.
You
probably
should
familiarize
yourself
with
the
design
pattern
in
Raymond
Hettinger's
""""
super
considered
super
""""
article
now
the
implementation
of
D
is
trivially
simple
:
Note
that
we
don't
even
need
to
define
__init__
because
all
of
the
constructors
of
the
super
classes
can
accept
arbitrary
keyword
arguments
.
Instantiating
a
D
looks
like
:
