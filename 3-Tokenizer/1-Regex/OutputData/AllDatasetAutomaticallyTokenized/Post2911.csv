Iterating
over
the
groups
of
partial
entries
looks
like
a
job
for
itertools.groupby
.
But
first
lets
put
relationships
into
a
format
that
is
easier
to
use
","
prehaps
a
back_populates:label
dictionary
?
Next
because
we
will
be
using
itertools.groupby
it
will
need
a
keyfunc
to
distinguish
between
the
different
groups
of
entries
.
So
given
one
entry
from
the
initial
results
","
this
function
will
return
a
dictionary
with
only
the
pairs
that
will
not
be
condensed
/
converted
Now
we
will
be
able
to
traverse
the
results
in
groups
something
like
this
:
The
only
issue
is
that
if
we
build
our
entry
from
base_info
it
will
confuse
groupby
so
we
need
to
make
an
entry
to
work
with
:
Note
that
I
am
using
sets
here
because
they
are
the
natural
container
when
all
contence
are
unique
","
however
because
it
is
not
json-compatible
we
will
need
to
change
them
into
lists
at
the
end
.
Now
that
we
have
an
entry
to
build
we
can
just
iterate
through
the
group
to
add
to
each
new
field
from
the
original
then
once
the
final
entry
is
constructed
all
that
is
left
is
to
convert
the
sets
back
into
lists
And
that
entry
is
done
","
now
we
can
either
append
it
to
a
list
called
new_results
but
since
this
process
is
essentially
generating
results
it
would
make
more
sense
to
put
it
into
a
generator
making
the
final
code
look
something
like
this
:
Then
the
new_results
can
be
gotten
like
this
:
