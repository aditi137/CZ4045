Etag
allows
to
mark
unique
status
of
a
web
resource
","
so
that
you
have
a
chance
to
ask
for
the
resource
expressing
latest
status
you
already
have
.
But
to
have
some
version
already
at
your
client
","
you
have
to
fetch
it
the
first
time
","
so
for
the
first
request
is
use
of
etag
irrelevant
.
See
HTTP
Etag
at
wikipedia
","
it
explains
it
all
.
Typical
scenario
is
:
fetch
your
page
the
first
time
and
read
value
of
Etag
header
for
future
use
next
time
you
ask
for
the
same
page
","
you
add
header
If-None-Match
with
value
of
Etag
from
your
last
fetch
.
Server
will
check
","
if
there
is
something
new
","
if
the
Etag
you
provide
and
Etag
at
current
version
of
resource
are
the
same
","
it
will
not
return
complete
page
back
","
but
rather
returh
HTTP
Status
code
304
Not
Modified
.
If
the
page
has
different
status
on
the
server
","
you
get
the
page
with
HTTP
Status
code
200
and
with
new
value
of
Etag
in
the
response
header
.
If
you
want
to
optimize
your
app
not
to
generate
initial
request
for
the
same
feed
by
each
user
","
you
shall
somehow
share
the
Etag
value
for
given
resource
globally
across
your
application
.
