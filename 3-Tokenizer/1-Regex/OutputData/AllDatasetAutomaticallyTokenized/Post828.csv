I
don't
know
of
an
existing
plugin
that
does
this
","
but
everything
you
mentioned
certainly
sounds
do-able
in
one
way
or
another
.
You
can
use
the
trac-admin
CLI
command
to
get
a
list
of
wiki
pages
and
to
dump
the
contents
of
a
particular
wiki
page
(
as
plain
text
)
to
a
file
or
stdout
.
Using
this
","
you
can
write
a
script
that
reads
in
all
of
the
wiki
pages
","
parses
the
content
for
links
","
and
generates
a
graph
of
which
pages
link
to
what
.
This
should
pinpoint
""""
orphans
""""
(
pages
that
aren't
linked
to
)
","
pages
that
link
to
source
files
","
and
pages
that
link
to
external
resources
.
Running
external
links
through
something
like
wget
can
help
you
identify
broken
links
.
To
access
last-edited
dates
","
you'll
want
to
query
Trac's
database
.
The
query
you'll
need
will
depend
on
the
particular
database
type
that
you're
using
.
For
playing
with
the
database
in
a
(
relatively
)
safe
and
easy
manner
","
I
find
the
WikiTableMacro
and
TracSql
plugins
quite
useful
.
The
hardest
feature
in
your
question
to
implement
would
be
the
one
regarding
page
views
.
I
don't
think
that
Trac
keeps
track
of
page
views
","
you'll
probably
have
to
parse
your
web
server's
log
for
that
sort
of
information
.
