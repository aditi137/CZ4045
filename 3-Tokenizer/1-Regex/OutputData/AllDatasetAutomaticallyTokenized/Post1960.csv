This
is
how
you
get
content
of
an
e-mail
i.e.
*
.
eml
file
.
This
works
perfectly
on
Python2.5
-
2.7
.
Try
it
on
3
.
It
should
work
as
well
.
I
programmed
this
for
my
mailgroup
using
mailbox
","
that
is
why
it
is
so
convoluted
.
It
never
failed
me
.
Never
any
junk
.
If
message
is
multipart
","
output
dictionary
will
contain
a
key
""""
files
""""
(
a
sub
dict
)
with
all
filenames
of
extracted
other
files
that
were
not
text
or
html
.
That
was
a
way
of
extracting
attachments
and
other
binary
data
.
You
may
change
it
in
pullout()
","
or
just
change
the
behaviour
of
file_exists()
and
save_file()
.
construct_name()
constructs
a
filename
out
of
message
id
and
multipart
message
filename
","
if
there
is
one
.
In
pullout()
the
Text
and
Html
variables
are
strings
.
For
online
mailgroup
it
was
OK
to
get
any
text
or
HTML
packed
into
multipart
that
wasn't
an
attachment
at
once
.
If
you
need
something
more
sophisticated
change
Text
and
Html
to
lists
and
append
to
them
and
add
them
as
needed
.
Nothing
problematic
.
Maybe
there
are
some
errors
here
","
because
it
is
intended
to
work
with
mailbox.Message()
","
not
with
email.Message()
.
I
tried
it
on
email.Message()
and
it
worked
fine
.
You
said
","
you
""""
wish
to
list
them
all
""""
.
From
where
?
If
you
refer
to
the
POP3
mailbox
or
a
mailbox
of
some
nice
open-source
mailer
","
then
you
do
it
using
mailbox
module
.
If
you
want
to
list
them
from
others
","
then
you
have
a
problem
.
For
example
","
to
get
mails
from
MS
Outlook
","
you
have
to
know
how
to
read
OLE2
compound
files
.
Other
mailers
rarely
refer
to
them
as
*
.
eml
files
","
so
I
think
this
is
exactly
what
you
would
like
to
do
.
Then
search
on
PyPI
for
olefile
or
compoundfiles
module
and
Google
around
for
how
to
extract
an
e-mail
from
MS
Outlook
inbox
file
.
Or
save
yourself
a
mess
and
just
export
them
from
there
to
some
directory
.
When
you
have
them
as
eml
files
","
then
apply
this
code
.
