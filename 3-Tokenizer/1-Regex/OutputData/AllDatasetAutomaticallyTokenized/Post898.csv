I
am
a
Python
novice
who
is
trying
to
learn
a
bit
about
this
fantastic
programming
language
.
I
have
tried
using
scipy.weave.inline
to
speed
up
some
computation
.
Just
to
learn
a
bit
","
I
tried
to
implement
a
matrix
multiplication
using
scipy.weave.inline
.
I
have
not
included
any
error
handling
-
just
trying
it
out
to
better
understand
it
.
The
code
is
as
follows
:
When
I
compare
with
numpy.dot
","
I
experience
that
the
weave.inline
version
takes
roughly
50x
the
time
as
numpy.dot
.
I
know
that
numpy
is
very
fast
when
it
can
be
applied
.
The
difference
is
even
seen
for
large
matrices
such
as
size
1000
x
1000
.
I
have
checked
both
numpy.dot
and
scipy.weave.inline
and
both
appear
to
use
one
core
100
%
when
computing
.
Numpy.dot
delivers
10.0
GFlops
compared
to
the
theoretical
11.6
GFlops
of
my
laptop
(
double
precision
)
.
In
single
precision
I
measure
the
double
performance
as
expected
.
But
the
scipy.weave.inline
is
way
behind
.
1
/
50
times
this
performance
for
scipy.weave.inline
.
Is
this
difference
to
be
expected
?
Or
what
am
I
doing
wrong
?
