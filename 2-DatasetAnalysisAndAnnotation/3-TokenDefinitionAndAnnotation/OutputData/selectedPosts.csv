,0
0,"Create a new file, copy lines from the old to the new, and do the replacing before you write the lines to the new file.
"
1,"Here is one solution:
from copy import deepcopy

def recursive_sum(int_list):
    #int_list = deepcopy(int_list)    use this line if don't want to modify original list
    ret = 0
    while len(int_list) > 0:
        elem = int_list.pop(0)
        if type(elem) == int:
            ret += elem
        elif type(elem) == list:
            int_list.extend(elem)
        else:
            raise ValueError
    return ret

testcase = [1,2,3,[4,5,[6,7,8,[9,10]]]]
print recursive_sum(testcase)    # print 55

Basically, it pops first element of input list. If it's Int, add into sum; if it's List, extend to the end of input list
"
2,"Thanks for your support and i have finally written my code and its working great here it is   
import lxml import etree    
for event, element in etree.iterparse(the_xml_file):
    if 'TV' in element.tag:
        print element.text

"
3,"Assuming both Latitude and Longitude are Integers:
'<a href=""http://maps.google.com/maps?z=12&t=m&q=loc:'+str(p['latitude'])+'+'+str(p['longitude'])+'"">Click Here</a>'

Try This.
Your mistake is that you are not concatenating the strings properly.
"
4,"I installed lxml on a mac and trying to use it in my code and I get errors importing tostring and tounicode. Python cannot see it at all. Any ideas what I am doing wrong?
Here is the code that is causing problems - 
from lxml.etree import tostring
from lxml.etree import tounicode

I get an unresolved import error 
Also my IDE (eclipse) is able to see the init.py file for lxml.etree module. Here is what it sees ---
# this is a package

def get_include():
    """"""
    Returns a list of header include paths (for lxml itself, libxml2
    and libxslt) needed to compile C code against lxml if it was built
    with statically linked libraries.
    """"""
    import os
    lxml_path = __path__[0]
    include_path = os.path.join(lxml_path, 'includes')
    includes = [include_path, lxml_path]

    for name in os.listdir(include_path):
        path = os.path.join(include_path, name)
        if os.path.isdir(path):
            includes.append(path)

    return includes

Thanks for any help.
EDIT:
The only log I see is 
    Unresolved import: tostring
    Unresolved import: tounicode
And when I add the following line before the import of tostring it works no errors --
    import etree from lxml
Also to give you some more background on what I am trying to do. I got the readability code from here (https://github.com/buriy/python-readability) and trying to use it in my project. 
EDIT2: I fixed the problem but still do not understand why. I wanted to use the code from the readability project directly without installing the package using easy_install. The idea was step into the code so that I understand what its doing. But when I copy the code into my project I get the above mentioned error in the readability code. If I install the package using easy_install then all I can simply import the class exported by readability and use it.
So can some one tell me what the difference is between using the code directly and the package installed? What is a .egg file? How to create one?
"
5,"The size of the file is sent as the Content-Length header. Here is how to get it with urllib:
>>> site = urllib.urlopen(""http://python.org"")
>>> meta = site.info()
>>> print meta.getheaders(""Content-Length"")
['16535']
>>>

"
6,"http://www.b-list.org/weblog/2007/nov/02/handle-choices-right-way/

class Entry(models.Model):
    LIVE_STATUS = 1
    DRAFT_STATUS = 2
    HIDDEN_STATUS = 3
    STATUS_CHOICES = (
        (LIVE_STATUS, 'Live'),
        (DRAFT_STATUS, 'Draft'),
        (HIDDEN_STATUS, 'Hidden'),
    )
    # ...some other fields here...
    status = models.IntegerField(choices=STATUS_CHOICES, default=LIVE_STATUS)

live_entries = Entry.objects.filter(status=Entry.LIVE_STATUS)
draft_entries = Entry.objects.filter(status=Entry.DRAFT_STATUS)

if entry_object.status == Entry.LIVE_STATUS:


This is another nice and easy way of implementing enums although it doesn't really save enums in the database.
However it does allow you to reference the 'label' whenever querying or specifying defaults as opposed to the top-rated answer where you have to use the 'value' (which may be a number).
"
7,"I am not sure about input format that user will enter. There are two possibities:
code:
n=int(input(""enter the no of workers \n""))
print(""enter the names of workers"")
NameList=[]
for i in range(n):
    NameList.append(input())
print(NameList)

possibility 1:
enter the no of workers 
4
enter the names of workers
name1
name2
name3
name4
['name1', 'name2', 'name3', 'name4']
working great...!!
possibility 2:
input will be : 
enter the no of workers 
4
enter the names of workers
name1 name2 name3 name4
in this case my code will fail. I'll need to write different code( i know how to write that ;) ) to accept this format of input.
So is there anyway that one code will work for both input formats. By treating spaces as Enter. Thanks
"
8,"Read this document:
http://docs.celeryproject.org/en/latest/internals/app-overview.html
The App is an instance of the Celery library, you can subclass app to override almost any part and corner of how Celery behaves.
"
9,"In case anyone needs it, I created Whooshstore, which is essentially a Whoosh-based, pure Python clone of GNU id utils that provides incremental updates, pagination and a Python API.
The command line client works like this:
ws-update -b --index my.idx datadir  # build the index
ws-update -b --append --index my.idx datadir  # incremental update
ws --index my.idx hello world     # query the index

(-b is for batch updating, which is faster but requires more memory. For the full CLI syntax use --help.)
It does not come close to the speed of GNU id utils, but by updating the index using several incremental batch (in-memory) updates it's fast enough for us.
"
10,"
What does the list consist of that we only want elements 0-5?

To be precise, request.endpoint is not a list, it's a string. And it doesn't matter what the rest of it contains, the code is only concerned with it beginning with 'auth.':
('auth.somethingsomething'[:5] == 'auth.') is True

I don't have much experience with Flask so I can't specify what possible auth.* values exist, but it's probably values like auth.username and auth.password.
If you're curious about what value it contains, you can add a debugging breakpoint to the code and inspect it:
# ... previous app code ...
import pdb; pdb.set_trace()
request.endpoint[:5] != 'auth.'

Then run and test the code. When it hits that point, it'll pause execution and give you a pdb shell, which will let you look at the request object and its endpoint attribute.
"
11,"You should call it using the class instead of object. So change your call to
QuizWizard.as_view(question_forms)(request)

Update:
The wizard view takes form class list as parameters not the form instance. You are creating form instances in question_forms and passing it to view.
If you want to pass instance for the form in each step, you can pass instance_dict.
Something like ...
inst_dict = { '0': question_forms[0], #step 0 instance
              '1': question_forms[1], #step 1 instance
            }
QuestFormList = [QuestionForm, QuestionForm ...]
QuizWizard.as_view([QuestFormList, instance_dict=inst_dict)(request)

"
12,"The following is the a simple BeautifulSoup code which has the two internal JavaScript( dont blame about the JavaScript it is just for testing purpose).
from bs4 import BeautifulSoup
html = """"""
<html><head><title>The Dormouse's story</title>
<script>

var x = 5;
var y = 6;
document.getElementById(""demo"").innerHTML = x + y;
//document.getElementById(""demo"").innerHTML = x;
//document.getElementById(""demo"").innerHTML = y;

</script>
<script>

var x = 5;
var y = 6;
document.getElementById(""demo"").innerHTML = x + y;
//document.getElementById(""demo"").innerHTML = x;
//document.getElementById(""demo"").innerHTML = y;

</script>

</head>
<body>
<p class=""title""><b>The Dormouse's story</b></p>

<p class=""story"">Once upon a time there were three little sisters; and their names were
<a href=""http://example.com/elsie"" class=""sister"" id=""link1"">Elsie</a>,
<a href=""http://example.com/lacie"" class=""sister"" id=""link2"">Lacie</a> and
<a href=""http://example.com/tillie"" class=""sister"" id=""link3"">Tillie</a>;
and they lived at the bottom of a well.</p>

<p class=""story"">...</p>
""""""
soup = BeautifulSoup(html)
soup.script.decompose()
print soup.prettify()

when I ran this code it remove only one <script>...</script> from the document(Dom tree) but it don't remove all other script tags. How can we remove all the <script>, <style>(internal and inline) tags which are existing in the document 
"
13,"For anyone who happens upon this question: I used anaconda installer, and now everything works perfectly. I would avoid the path I took and go directly to anaconda.
"
14,"@property defined as int
The following code is taken from Python Docs:
class Parrot(object):
    def __init__(self):
        self._voltage = 100000

    @property
    def voltage(self):
        """"""Get the current voltage.""""""
        return self._voltage

When I run:
parrot = Parrot()
print(parrot.voltage)
parrot.voltage = 100
print(parrot.voltage)

I get the following output (as expected, as no setter is defined)
{0: 100000}
Traceback (most recent call last):
   File ""prop.py"", line 13, in <module>
     parrot.voltage = 100
 AttributeError: can't set attribute

@property defined as dict
However, if I define self._voltage = {} the property becomes writeable:
class Parrot(object):
    def __init__(self):
        self._voltage = {}
        self._voltage[0] = 100000

    @property
    def voltage(self):
        """"""Get the current voltage.""""""
        return self._voltage

parrot = Parrot()
print(parrot.voltage)
parrot.voltage[0] = 100
print(parrot.voltage)

The output is then:
{0: 100000}
{0: 100}

Same behavior in Python 2.7.9 and Python 3.4.3. Why is the property writeable, even if no setter is explicitly defined in the code? Here it was proposed to subclass dict to get this behavior. However, it seems that this not required.
"
15,"Pythonic way (Python 2)
dict1 = {
    'a': 'Apple',
    'b': 'Boy'
}

dict2 = {
    'c': 'Cow',
    'd': 'Dog'
}

merged_dict = dict1.copy()
merged_dict.update(dict2)

"
16,"import os
f=os.popen('df -h')
drive_usage=f.read()
drive_usage.split()
email('test','Critical! Drive usage is very high!')
for x in range(4,len(drive_usage)-1,6):
    s2 = drive_usage[x][0:len(drive_usage[x])]
    drive_usage[x] = s2
    if drive_usage[x]>90:
        #email admin

This code should read the output of df -h on an ubuntu 12.04 server, split the output of the command into a list, and then trim the '%' character off, so that the drive usage can be used as a comparator in an if statement. Then, if it's above 90%, it should email the server admins. 
However, drive_usage[x] = s2 triggers the 'str' object does not support item assignment. To my knowledge, this should not be triggering, as that line should be accessing a string in a list, not a character in a string. Any help or advice would be appreciated!
"
17,"So, I have this forum I am building. I'm having trouble writing an elegant select query to get all the posts for a certain topic from the db. Here's the schema:
Table posts have the following structure:
   id int(5) not null auto_increment,
   user_id int(5) not null,
   topic_id int(5) not null,
   post_date datetime not null,

Now, there's also a table called attachments, where post attachments are referenced. I want to be able to select the attachments of a particular post with just one query. Here's the attachments table structure:
   id int(5) not null auto_increment,
   post_id int(5) not null,
   post_name varchar(255) not null default '',
   path varchar(255) not null,

This is not what my tables look like really. I just want a basic idea how to do it. I can't even think of the least of solutions. Now the attachment table has a foreign key that references the post table. But, a post could possibly have many attachments. So how do I select a post and all its attachment in just one query? Maybe subqueries could work?
"
18,"I'm fairly new to python and have found that I need to query a list about whether it contains a certain item.
The majority of the postings I have seen on various websites (including this similar stackoverflow question) have all suggested something along the lines of
for i in list
    if i == thingIAmLookingFor
        return True

However, I have also found from one lone forum that 
if thingIAmLookingFor in list
    # do work

works.  
I am wondering if the if thing in list method is shorthand for the for i in list method, or if it is implemented differently.
I would also like to which, if either, is more preferred.
"
19,"QColor supports the HSL representation. You want to limit the range of lightness:
QColor limitLightness(const QColor & color) {
  auto hsl = src.toHsl();
  auto h = hsl.hslHueF();
  auto s = hsl.hslSaturationF();
  auto l = hsl.lightnessF();
  qreal const lMin = 0.25;
  qreal const lMax = 0.75;
  return QColor::fromHslF(h, s, qBound(lMin, lMax, l));
}

"
20,"In Python3:
>>> import urllib.request
>>> site = urllib.request.urlopen(""http://python.org"")
>>> print(""FileSize: "", site.length)

"
21,"The shortest way would probably be to use the fileinput module. For example, the following adds line numbers to a file, in-place:
import fileinput

for line in fileinput.input(""test.txt"", inplace=True):
    print ""%d: %s"" % (fileinput.filelineno(), line),

What happens here is:

The original file is moved to a backup file
The standard output is redirected to the original file within the loop
Thus any print statements write back into the original file

fileinput has more bells and whistles. For example, it can be used to automatically operate on all files in sys.args[1:], without your having to iterate over them explicitly. Starting with Python 3.2 it also provides a convenient context manager for use in a with statement.

While fileinput is great for throwaway scripts, I would be wary of using it in real code because admittedly it's not very readable or familiar. In real (production) code it's worthwhile to spend just a few more lines of code to make the process explicit and thus make the code readable.
There are two options:

The file is not overly large, and you can just read it wholly to memory. Then close the file, reopen it in writing mode and write the modified contents back.
The file is too large to be stored in memory; you can move it over to a temporary file and open that, reading it line by line, writing back into the original file. Note that this requires twice the storage.

"
22,"For Python 2 :
x = {'a':1, 'b': 2}
y = {'b':10, 'c': 11}
z = dict(x.items()+y.items())
print(z)

For Python 3:
x = {'a':1, 'b': 2}
y = {'b':10, 'c': 11}
z = dict(x.items()|y.items())
print(z)

It gives output:{'a': 1, 'c': 11, 'b': 10}
"
23,"It seems you're talking of a Numpy array.
shape returns a tuple with the same size as the number of dimensions of the array. Each value of the tuple is the size of the array along the corresponding dimensions, or, as the tutorial says: 

An array has a shape given by the number of elements along each axis.

Here you have a 1D-array (as indicated with a 1-element tuple notation, with the coma (as @Amadan) said), and the size of the 1st (and only dimension) is 38845.
For example (3,4) would be a 2D-array of size 3 for the 1st dimension and 4 for the second.
You can check the documentation for shape here: http://docs.scipy.org/doc/numpy/reference/generated/numpy.ndarray.shape.html
"
24,"I have a solution which is not specified here(Man I LOVE python) :-)
z = {}
z.update(x) or z.update(y)

This will not update x as well as y. Performance? I don't think it will be terribly slow :-)
NOTE: It is supposed to be 'or' operation and not 'and' operation. Edited to correct the code.
"
25,"I apologize if this is a silly question. But I tried to google this and I couldn't find anything to point me in the right direction. I'd just like to understand what I need to do to 'set-up' cdt to 'understand' my python.h include.
the erroneous statement is this:
#include <Python.h>

but I also tried
#include ""Python.h""

And CDT responds with an error sign on the side stating:
Multiple markers at this line
- fatal error: Python.h: No such file or 
 directory
- Unresolved inclusion: <Python.h>

I am using Eclipse CDT Juno on Ubuntu 12.04. Any pointers would be great!
"
26,"I ended up just manually looking at each cell. I have to read them all into my data structures before I can process anything anyways so it actually made sense to check then.
"
27,"
I'll try to be brief. Well.. I always try to be brief, but my level of success is pretty much random.randint(0, never). So yeah.

Lol. You even failed to be brief about announcing that you will try to be brief.
First, we need to be clear about what ""called into being"" means. Presumably you want a new hammer every time self.tool = object happens. You don't want a new instance every time, for example, you access the tool attribute, or you'd always a get a new, presumably unbroken, hammer every time you check self.tool.broken.
A couple approaches.
One, give Tool a copy method that produces a new object that should equal the original object, but be a different instance. For example:
class Tool:

    def __init__(self, kind):
        self.kind = kind
        self.broken = False

    def copy(self):
        result = Tool(self.kind)
        result.broken = self.broken
        return result

Then in Student's init you say
    self.tool = tool.copy()

Option two, use a factory function.
def makehammer():
    return Tool(hammer)

class Student:
    def __init__(self, factory):
        self.tool = factory()

Billy = Student(makehammer)

I can't think any way in Python that you can write the line self.tool = object and have object automagically make a copy, and I don't think you want to. One thing I like about Python is WYSIWYG. If you want magic use C++. I think it makes code hard to understand when you not only can't tell what a line of code is doing, you can't even tell it's doing anything special.
Note you can get even fancier with a factory object. For example:
class RealisticFactory:
    def __init__(self, kind, failurerate):
        self.kind = kind
        self.failurerate = failurerate

    def make(self):
        result = Tool(self.kind)
        if random.random() < self.failurerate:
            result.broken = True
        if (self.failurerate < 0.01):
            self.failurerate += 0.0001
        return result

factory = RealisticFactory(hammer, 0.0007)
Billy = Student(factory.make)
Tommy = Student(factory.make) # Tommy's tool is slightly more likely to be broken

"
28,"In Python, what are the running time and space complexities if a list is converted to a set?
Example:
data = [1,2,3,4,5,5,5,5,6]

# this turns list to set and overwrites the list
data = set(data)

print data 
# output will be (1,2,3,4,5,6)

"
29,"I'm following this tutorial:
http://zetcode.com/tutorials/pyqt4/firstprograms/
and on the very first example I don't understand why does the application show only after the command:
sys.exit(app.exec_())

Also, I modified the code slightly to test things
import sys
from PyQt4 import QtGui


if __name__ == ""__main__"":
    app = QtGui.QApplication(sys.argv)
    w = QtGui.QWidget()
    w.resize(250,150)
    w.move(300,300)
    w.setWindowTitle(""Title"")
    w.show()
    sys.exit(app.exec_())

If I run this in the terminal and comment out the last line it will only show the window after running the last line.
I don't quite understand what the last line does.
EDIT:
I'm also confused as to why there isn't a reference of app and w i'd expect some kind of indication that w is a child or something of app.
I'm running it in Spyder and an IPython interpreter.
"
30,"Resetting the listbox width worked for me. I used the Oblivion's answer and noticed that only width is always zero.
listbox = tk.Listbox(master, selectmode=tk.SINGLE)
listbox.config(width=0)

I also recommend to reset root window geometry after reloading content of the list. If user manually extends the window the window would stop accommodate size of its content.
root.winfo_toplevel().wm_geometry("""")

"
31,"Hi hope you're still looking for an answer. Here is how I solved it:
add a file called hook-psutil.py
from PyInstaller.hooks.hookutils import (collect_data_files, collect_submodules)

datas = [('./venv/lib/python2.7/site-packages/psutil/_psutil_linux.so', 'psutil'),
         ('./venv/lib/python2.7/site-packages/psutil/_psutil_posix.so', 'psutil')]
hiddenimports = collect_submodules('psutil')

And then call pyinstaller --additional-hooks-dir=(the dir contain the above script) script.py
"
32,"x = [1,1,2,3,54,3,1]
y = [1,1,0,0,0,0,1]
any([i[0]==i[1] for i in zip(x,y)])

"
33,"I'm getting this error on creating a string with arguments like ""abcd%s""%(e) but I'm getting e by scraping a web page. Can anyone please tell me what is the best way to avoid this error. 
I found other similar questions but they were using %20 in the url for which they need to replace %20 with %%20 which solved their problem. But my case is different. I tried encoding e but still getting same error.
ValueError: unsupported format character 'W' (0x57)

"
34,"I understand that in order to find a nested document that I am to use the dot notation, but I need what follows the dot be in variable form. I am doing the following:
collection.update_one(
                    {'_id': md5_hash}, 
                    {'$addToSet' : {
                     'src_id': src_id,
                     'offset.src_id' : offset}}
                                  )

and getting 
{
        ""_id"" : ""de03fe65a6765caa8c91343acc62cffc"",
        ""total_count"" : 1,
        ""src_id"" : [
                ""a3c1b98d5606be7c5f0c5d14ffb0b741""
        ],
        ""offset"" : {
                ""a3c1b98d5606be7c5f0c5d14ffb0b741"" : [
                        512
                ],
                ""src_id"" : [
                        512,
                        1024,
                        1536,
                        2048,
                        2560,
                        3072,
                        3584,
                        4096,
                        4608
                ]
        },
        ""per_source_count"" : {
                ""a3c1b98d5606be7c5f0c5d14ffb0b741"" : 1
        }
}

I don't want ""src_id"" in the offset document I want to add to the a3c1b98d5606be7c5f0c5d14ffb0b741 key. I am using python3.5 and pymongo version 3.2.2. Thanks!
"
35,"This type of problem is well suited to Numpy masked arrays:
import numpy.ma as ma

x = ma.array([1,1,2,3,54,3,1])
y = ma.array([1,1,1,1,1,1,1], mask=[0,0,1,1,1,1,0])

print x==y           # [True True -- -- -- -- True]
print ma.all(x==y)   # True

Of course, the use here may not merit installing and importing numpy, but it has advantages in some situations.
"
36,"This is the best I could come up with for now.
df.set_index('Time').groupby(pd.TimeGrouper('5T')) \
    .apply(lambda df: df.reset_index()).unstack() \
    .resample('5T').last().stack(dropna=False)

"
37,"The line json=data should have been data=data. The json attribute accepts a dictionary, which that data string is not. Here is what working code looks like:
import json
import requests
url = 'https://inputtools.google.com/request?itc=ja-t-i0-handwrit&app=demopage'

data = '{""app_version"":0.4,""api_level"":""537.36"",""device"":""Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.103 Safari/537.36"",""input_type"":0,""options"":""enable_pre_space"",""requests"":[{""writing_guide"":{""writing_area_width"":200,""writing_area_height"":200},""pre_context"":"""",""max_num_results"":1,""max_completions"":0,""ink"":[[[100,100],[20,180],[0,1]],[[20,180],[100,100],[2,3]]]}]}'

headers = {'content-type': 'application/json'}

r = requests.post(url, json=data, headers=headers)
print r.json() 

"
38,"Is there a more pythonic way than doing:
 parsedStr=origStr[compiledRegex.match(origStr).start():compiledRegex.match(origStr).end())

For exampile assume my original string is ""The cat said hi"" and my compiled regex is ""The.*said"" I would pull the text ""The cat said""
The above code looks ugly but that's how i've been doing it
"
39,"I know this may sounds like a duplicate question, but that's because I don't know how to describe this question properly. 
For some reason I got a bunch of unicode string like this:
a = u'\xcb\xea'

As you can see, it's actually bytes representation of a Chinese character, encoding in gbk
>>> print(b'\xcb\xea'.decode('gbk'))
岁

u'岁' is what I need, but I don't know how to convert u'\xcb\xea' to b'\xcb\xea'.
Any suggestions?
"
40,"I have three lists (L1, L2, L3), something like :
L1 = [1,2]
L2 = ['a','b']
L3 = ['A','B']

I want to compute the product of L1*L2*L3, id est,
itertools.product(L1,L2,L3) = [ [1,'a','A'], [1,'a','B'], ... ]

but I want to take or not in account some lists; hence,[1,], [ 1, 'a' ] would be a part of the result, like ['a',], ['a', 'B'] and so on.
Any idea to help me ? Thanks !
"
41,"The error message in the question does not come from the subprocess. It was generated before the subprocess execution. You cannot capture that error using stderr option.
Make sure there's ding program in the path.
"
42,"I'm working on a simple text-based trivia game as my first python project, and my program won't terminate once the score limit is reached.
def game(quest_list):
    points = 0
    score_limit = 20

    x, y = info()
    time.sleep(2)

    if y >= 18 and y < 100:
        time.sleep(1)
        while points < score_limit:
            random.choice(quest_list)(points)
            time.sleep(2)
            print(""Current score:"", points, ""points"")
        print(""You beat the game!"")
        quit()
    ...

"
43,"use the s parameter.
from pandas.tools.plotting import scatter_matrix

df = pd.DataFrame(np.random.rand(10, 2))
scatter_matrix(df, alpha=0.5, figsize=(8, 8), diagonal='kde', s=1000)


"
44,"I'm aware of numpy.argsort(), but what it does is return indices of elements in an array that would be sorted along a certain axis.
What I need is to sort all the values in an N-dimensional array and have a linear list of tuples as as result.
Like this:
>>> import numpy
>>> A = numpy.array([[7, 8], [9, 5]])
>>> numpy.magic(A)
[(1, 0), (0, 1), (0, 0), (1, 1)]

P.S. I don't even understand what the output of argsort is trying to tell me for this array.
"
45,"Personally, I would try to implement JQuery like API in a GUI framework.
class MyWindow(Window):
    contents = (
        para('Hello World!'),
        button('Click Me', id='ok'),
        para('Epilog'),
    )

    def __init__(self):
        self['#ok'].click(self.message)
        self['para'].hover(self.blend_in, self.blend_out)

    def message(self):
        print 'You clicked!'

    def blend_in(self, object):
        object.background = '#333333'

    def blend_out(self, object):
        object.background = 'WindowBackground'

"
46,"Keep a look out for ASP.NET MVC
The IronRuby guys have got some internal builds of MVC to work with IronRuby, and IronPython 2 and IronRuby have a lot of code in common with the DLR.
I'm not sure if they'll support IronPython/IronRuby when MVC is released, but it's definitely worth keeping your eye on anyway - The old ASP.NET forms-based development model is old, busted, and the sooner it goes away the better.
"
47,"It seems that this will do
product = np.dot(A,A.T)
np.fill_diagonal(product,0)
if (product.any() == 0):

"
48,"Can I run a Python folder or directory as a whole to execute all the .py files in it?
Edit: I'm using Windows Powershell.
"
49,"What about just assigning a class to your widget and then binding that class to the JQuery datepicker?
Django forms.py:
class MyForm(forms.ModelForm):

  class Meta:
    model = MyModel

  def __init__(self, *args, **kwargs):
    super(MyForm, self).__init__(*args, **kwargs)
    self.fields['my_date_field'].widget.attrs['class'] = 'datepicker'

And some JavaScript for the template:
  $("".datepicker"").datepicker();

"
50,"I am trying to archive a remote git repo using Python code. I did it successfully using Git command line with following command.
> git archive --format=zip --remote=ssh://path/to/my/repo -o archived_file.zip     
HEAD:path/to/directory filename

This command fetches the required file from the repo and stores the zip in my current working directory. Note that there is no cloning of remote repo happening.
Now I have to do it using Python code. I am using GitPython 1.0.1. I guess if it is doable using command line then it should be doable using GitPython library. According to the docs, 
repo.archive(open(join(rw_dir, 'archived_file.zip'), 'wb'))

Above line of code will archive the repo. Here repo is the instance of Repo class. It can be initialized using
repo = Repo('path to the directory which has .git folder')

If I give path to my remote repo(Ex. ssh://path/to/my/repo) in above line it goes to find it in directory where the .py file containing this code is residing(Like, Path\to\python\file\ssh:\path\to\my\repo), which is not what I want. So to sum up I can archive a local repo but not a remote one using GitPython. I may be able to archive remote repo if I am able to create a repo instance pointing to the remote repo. I am very new to Git and Python.
Is there any way to archive a remote repo using Python code without cloning it in local?
"
51,"You can generate the truth table using a powerset,
def power_set(items):
    n = len(items)
    for i in xrange(2**n):
        combo = []
        for j in xrange(n):
            if (i >> j) % 2 == 1:
                combo.append(1)
            else:
                combo.append(0)
        yield combo    # if you want tuples, change to yield tuple(combo)


In [13]: list(power_set(l))
Out[13]: [[0, 0], [1, 0], [0, 1], [1, 1]]

In [14]: l=['B','C','E']

In [15]: list(power_set(l))
Out[15]: 
[[0, 0, 0],
[1, 0, 0],
 [0, 1, 0],
 [1, 1, 0],
 [0, 0, 1],
 [1, 0, 1],
 [0, 1, 1],
 [1, 1, 1]]

If you want to  make a dict of the data, change yield combo to yield tuple(combo)
Then you can store key value pairings  like:
d={}
for data in power_set(l):
    d[data]=""your_calc_prob""
print d
{(0, 1): 'your_calc_prob', (1, 0): 'your_calc_prob', (0, 0): 'your_calc_prob', (1, 1): 'your_calc_prob'}

If you want the output sorted you can use sorted() which makes a copy of the list and returns a list:
 sorted(list(power_set(l)))
 Out[21]: 
 [[0, 0, 0],
 [0, 0, 1],
 [0, 1, 0],
 [0, 1, 1],
 [1, 0, 0],
 [1, 0, 1],
 [1, 1, 0],
 [1, 1, 1]]

Or you can use the list method sort() which sorts the list  in place:
In [22]: data = list(power_set(l))  
In [23]: data.sort()
In [24]: data
Out[24]: 
[[0, 0, 0],
[0, 0, 1],
[0, 1, 0],
[0, 1, 1],
[1, 0, 0],
[1, 0, 1],
[1, 1, 0],
[1, 1, 1]]

"
52,"I have just picked up Python to develop a tool and I am so far really enjoying the language, however have one issue I am not entirely sure how to solve.
I am looking to use a few external libraries in my project, at the moment cherryPy and Cheetah however I am not sure how to package up my application so that these libraries are included. Coming from a .NET world the compiler used to do pretty much everything for me.
Have done a bit of googling but have not been able to find any solution, so I must be missing something fundamental. Is this something I need to configure distutils for? Do I need to copy the libs in to my application folder structure anywhere? Both?
Appreciate any advice please. :)
"
53,"The best way to achieve this seems to be to create a new generator class expanding the one provided by Keras that parses the data augmenting only the images and yielding all the outputs.
"
54,"if position <= 18:
    ...
elif position == 18:
    ...

Both the if and elif branches are catching position if position == 18 (note the <= in the if statement), so the elif branch will never be executed.
"
55,"Actually i used both beautiful soup and element tree(for xml parsing)
fetch all elements in <span> 
# -*- coding: UTF-8 -*-

from bs4 import *
import xml.etree.ElementTree as ET

html='''<html>
<head>
    <title></title>
</head>

<body>
    <table class=""dayinner"">
        <tr class=""lun"">
            <td class=""mealname"" colspan=""3"">LUNCH</td>
        </tr>

        <tr class=""lun"">
            <td class=""station"">&nbsp;Deli</td>

            <td class=""menuitem"">
                <div class=""menuitem"">
                    <input class=""chk"" id=""S1L0000010000047598_35356"" onclick=
                    ""rptlist(this);"" onmouseout=""wschk(0);"" onmouseover=
                    ""wschk(1);"" type=""checkbox""> <span class=""ul"" onclick=
                    ""nf('0000047598_35356');"" onmouseout=""pcls(this);""
                    onmouseover=""ws(this);"">Made to Order Deli Core</span>
                </div>
            </td>

            <td class=""price""></td>
        </tr>

        <tr class=""lun"">
            <td class=""station"">&nbsp;</td>

            <td class=""menuitem"">
                <div class=""menuitem"">
                    <input class=""chk"" id=""S1L0000020000047933_06835"" onclick=
                    ""rptlist(this);"" onmouseout=""wschk(0);"" onmouseover=
                    ""wschk(1);"" type=""checkbox""> <span class=""ul"" onclick=
                    ""nf('0000047933_06835');"" onmouseout=""pcls(this);""
                    onmouseover=""ws(this);"">Turkey Chipotle Petite Wrap</span>
                </div>
            </td>

            <td class=""price""></td>
        </tr>

        <tr class=""lun"">
            <td colspan=""3"" style=""height:3px;""></td>
        </tr>

        <tr class=""lun"">
            <td colspan=""3"" style=""background-color:#c0c0c0; height:1px;""></td>
        </tr>

        <tr class=""lun"">
            <td class=""station"">&nbsp;Entrée</td>

            <td class=""menuitem"">
                <div class=""menuitem""><input class=""chk"" id=
                ""S1L0000030000044794_08943"" onclick=""rptlist(this);""
                onmouseout=""wschk(0);"" onmouseover=""wschk(1);"" type=""checkbox"">
                <span class=""ul"" onclick=""nf('0000044794_08943');"" onmouseout=
                ""pcls(this);"" onmouseover=""ws(this);"">Steamed
                Corn</span><img alt=""Vegan"" class=""icon"" src=
                ""images/g_062.gif""><img alt=""Mindful Item"" class=""icon"" src=
                ""images/m_051.gif""></div>
            </td>

            <td class=""price""></td>
        </tr>

        <tr class=""lun"">
            <td class=""station"">&nbsp;</td>

            <td class=""menuitem"">
                <div class=""menuitem"">
                    <input class=""chk"" id=""S1L0000040000033087_22244"" onclick=
                    ""rptlist(this);"" onmouseout=""wschk(0);"" onmouseover=
                    ""wschk(1);"" type=""checkbox""> <span class=""ul"" onclick=
                    ""nf('0000033087_22244');"" onmouseout=""pcls(this);""
                    onmouseover=""ws(this);"">Cuban Mojo Roasted Pork Loin</span>
                </div>
            </td>

            <td class=""price""></td>
        </tr>
    </table>
</body>
</html> '''

soup = BeautifulSoup(html)

counter = ET.Element('counter')
counter.set(""name"", ""#Deli"")





for i in soup.findAll('span'):
    dish = ET.SubElement(counter, 'dish')
    name = ET.SubElement(dish, 'name')
    name.text= i.text.replace('\n',' ')

print ET.dump(counter)

"
56,"Adapting Wayne Werner's solution you can do this to add the digit uniqueness constraint (assuming Python 3):
[(9*num, num) 
 for num in range(10000, 100000 // 9) 
 if len(set(str(num) + str(num * 9))) == 10]

This runs in 1.5 ms on my machine.
Note, that you can only check numbers between 10000 and 100000 / 9 = 11111. 
And if you want to allow preceding zeros, you can do it like this:
[(9*num, num) 
 for num in range(0, 100000 // 9) 
 if len(set((""%05d"" % num) + (""%05d"" % (num * 9)))) == 10]

And this one takes 15 ms.
"
57,"Yep, I ended up overriding the /admin/jsi18n/ url.
Here's what I added in my urls.py.  Make sure it's above the /admin/ url
    (r'^admin/jsi18n', i18n_javascript),

And here is the i18n_javascript function I created.
from django.contrib import admin
def i18n_javascript(request):
  return admin.site.i18n_javascript(request)

"
58,"The if thing in somelist is the preferred and fastest way.
Under-the-hood that use of the in-operator translates to somelist.__contains__(thing) whose implementation is equivalent to:  any((x is thing or x == thing) for x in somelist).
Note the condition tests identity and then equality.
"
59,"I'm trying to connect to website with python requests, but not with my real IP. So, I found some proxy on the internet and wrote this code:
import requests

proksi = {
    'http': 'http://5.45.64.97:3128'
}

x = requests.get('http://www.whatsmybrowser.org/', proxies = proksi)
print(x.text)

When I get output, proxy simple don't work. Site returns my real IP Address. What I did wrong? Thanks.
"
60,"I had a similar problem: how to catch broken symlinks, even when they occur in some parent dir?  I also wanted to log all of them (in an application dealing with a fairly large number of files), but without too many repeats.
Here is what I came up with, including unit tests.
fileutil.py:
import os
from functools import lru_cache
import logging

logger = logging.getLogger(__name__)

@lru_cache(maxsize=2000)
def check_broken_link(filename):
    """"""
    Check for broken symlinks, either at the file level, or in the
    hierarchy of parent dirs.
    If it finds a broken link, an ERROR message is logged.
    The function is cached, so that the same error messages are not repeated.

    Args:
        filename: file to check

    Returns:
        True if the file (or one of its parents) is a broken symlink.
        False otherwise (i.e. either it exists or not, but no element
        on its path is a broken link).

    """"""
    if os.path.isfile(filename) or os.path.isdir(filename):
        return False
    if os.path.islink(filename):
        # there is a symlink, but it is dead (pointing nowhere)
        link = os.readlink(filename)
        logger.error('broken symlink: {} -> {}'.format(filename, link))
        return True
    # ok, we have either:
    #   1. a filename that simply doesn't exist (but the containing dir
           does exist), or
    #   2. a broken link in some parent dir
    parent = os.path.dirname(filename)
    if parent == filename:
        # reached root
        return False
    return check_broken_link(parent)

Unit tests:
import logging
import shutil
import tempfile
import os

import unittest
from ..util import fileutil


class TestFile(unittest.TestCase):

    def _mkdir(self, path, create=True):
        d = os.path.join(self.test_dir, path)
        if create:
            os.makedirs(d, exist_ok=True)
        return d

    def _mkfile(self, path, create=True):
        f = os.path.join(self.test_dir, path)
        if create:
            d = os.path.dirname(f)
            os.makedirs(d, exist_ok=True)
            with open(f, mode='w') as fp:
                fp.write('hello')
        return f

    def _mklink(self, target, path):
        f = os.path.join(self.test_dir, path)
        d = os.path.dirname(f)
        os.makedirs(d, exist_ok=True)
        os.symlink(target, f)
        return f

    def setUp(self):
        # reset the lru_cache of check_broken_link
        fileutil.check_broken_link.cache_clear()

        # create a temporary directory for our tests
        self.test_dir = tempfile.mkdtemp()

        # create a small tree of dirs, files, and symlinks
        self._mkfile('a/b/c/foo.txt')
        self._mklink('b', 'a/x')
        self._mklink('b/c/foo.txt', 'a/f')
        self._mklink('../..', 'a/b/c/y')
        self._mklink('not_exist.txt', 'a/b/c/bad_link.txt')
        bad_path = self._mkfile('a/XXX/c/foo.txt', create=False)
        self._mklink(bad_path, 'a/b/c/bad_path.txt')
        self._mklink('not_a_dir', 'a/bad_dir')

    def tearDown(self):
        # Remove the directory after the test
        shutil.rmtree(self.test_dir)

    def catch_check_broken_link(self, expected_errors, expected_result, path):
        filename = self._mkfile(path, create=False)
        with self.assertLogs(level='ERROR') as cm:
            result = fileutil.check_broken_link(filename)
            logging.critical('nothing')  # trick: emit one extra message, so the with assertLogs block doesn't fail
        error_logs = [r for r in cm.records if r.levelname is 'ERROR']
        actual_errors = len(error_logs)
        self.assertEqual(expected_result, result, msg=path)
        self.assertEqual(expected_errors, actual_errors, msg=path)

    def test_check_broken_link_exists(self):
        self.catch_check_broken_link(0, False, 'a/b/c/foo.txt')
        self.catch_check_broken_link(0, False, 'a/x/c/foo.txt')
        self.catch_check_broken_link(0, False, 'a/f')
        self.catch_check_broken_link(0, False, 'a/b/c/y/b/c/y/b/c/foo.txt')

    def test_check_broken_link_notfound(self):
        self.catch_check_broken_link(0, False, 'a/b/c/not_found.txt')

    def test_check_broken_link_badlink(self):
        self.catch_check_broken_link(1, True, 'a/b/c/bad_link.txt')
        self.catch_check_broken_link(0, True, 'a/b/c/bad_link.txt')

    def test_check_broken_link_badpath(self):
        self.catch_check_broken_link(1, True, 'a/b/c/bad_path.txt')
        self.catch_check_broken_link(0, True, 'a/b/c/bad_path.txt')

    def test_check_broken_link_badparent(self):
        self.catch_check_broken_link(1, True, 'a/bad_dir/c/foo.txt')
        self.catch_check_broken_link(0, True, 'a/bad_dir/c/foo.txt')
        # bad link, but shouldn't log a new error:
        self.catch_check_broken_link(0, True, 'a/bad_dir/c')
        # bad link, but shouldn't log a new error:
        self.catch_check_broken_link(0, True, 'a/bad_dir')

if __name__ == '__main__':
    unittest.main()

"
61,"I'm trying to work out a function to find specific patterns in a list.  For example if we take the list 
x = [1,1,2,3,54,3,1]

I want to then check if the pattern y shows up in the list x:
y = [1,1,n,n,n,n,1]

where n represents any number.  So in my example it would return True.
I've looked into the any() function and I haven't been able to work much out. 
"
62,"In Python 3.5 you can use unpack ** in order to create new dictionary. 
This method has no been showed in past answers. Also, it's better to use {} instead of dict(). Because {} is a python literal and dict() involves a function call.
dict1 = {'a':1}
dict2 = {'b':2}
new_dict = {**dict1, **dict2}
>>>new_dict
{'a':1, 'a':2}

"
63,"If your session.execute writes were not successful (they did not meet the required consistency level), then the driver will raise one of the following exceptions:

Unavailable - There were not enough live replicas to satisfy the requested consistency level, so the coordinator node immediately failed the request without forwarding it to any replicas.
Timeout - Replicas did not respond to the coordinator before cassandra timeout.
Write timeout - Replicas did not respond to the coordinator before the write timeout. Configured in cassandra.yaml. There is a similar timeout for reads, read and write timeouts are configured separately in the yaml.
Operation timeout - Operation took longer than the specified client side timeout. Configure in your application code.

You can try tracing your queries and find out what exactly happened for each write. This will show you the coordinators and the replica nodes involved in the operation and how much time the request spent in each.
"
64,"I have a xml file ""sample.xml"" as:
<?xml version=""1.0"" encoding=""UTF8"" ?>
< !DOCTYPE nodedescription SYSTEM ""sample.dtd"" >
<node_description>
    <target id=""windows 32bit"">
        <graphics>nvidia_970</graphics>
        <power_plug_type>energenie_eu</power_plug_type>
        <test>unit test</test>
   </target>
   <target id=""windows 64bit"">
       <graphics>nvidia_870</graphics>
       <power_plug_type>energenie_eu</power_plug_type>
       <test>performance test</test>
   </target>
</node_description>

and respective dtd as ""sample.dtd"":
<?xml version=""1.0"" encoding=""UTF-8""?>
<!ELEMENT node_description (target)*>
<!ATTLIST target id CDATA #REQUIRED>
<!ELEMENT target (graphics, power_plug_type, test)>
<!ELEMENT graphics (#PCDATA)*>
<!ELEMENT power_plug_type (#PCDATA)*>
<!ELEMENT test (#PCDATA)*>

I want ""sample.xml"" to get validated against ""sample.dtd"" by making use of python script. How will i achieve this? kindly help.
"
65,"What I'm trying to do is apply a dynamic background color to black text.
The color is calculated as a result of a hash of the text.
The problem is, all too often the color comes out too dark to be able to read the text.
How can I lighten the color to keep it in a decent visual range (not too dark, not too light)?
The color can't be brighter than beige or darker than teal.
(Keep in mind that Blue at 255 is darker than Green at 255, because the human eye is most sensitive to Green and the least sensitive to Blue)
"
66,"Embeding the Python interpreter inside your C++ app will let you run Python programs using your application run Python scripts. It will also make it easier possible for those scripts to call C++ functions in your application. If this is what you want then the Boost library mentioned previously may be what you want to make it easier to create the link. In the past I have used SWIG to generate Python interfaces to C++ code. It was not clear from your question whether you wanted the Python scripts to call your C++ program or whether you just wanted the C++ to call Python.
Many of the Python functions use modules which are not built into the Python interpreter. If your Python scripts call these functions then you will either need to have your users install Python or include the python runtime files with your application. It will depend on what modules you import in you Python scripts.
"
67,"The following snippet should do what you want:
import re
from xml.etree import ElementTree                                               

with open('films.xml') as f:                                                    
    xml = ElementTree.parse(f)                                                  

for t in xml.findall('.//{http://www.mediawiki.org/xml/export-0.5/}text'):
    print '===================='
    m = re.search(r'(?s).*?{{(Infobox film.*?)}}', t.text)
    if m:
        print m.group(1)

The regular expression there begins with (?s), which turns on the DOTALL option, meaning that . matches newlines as well as any other character.  The two instances of .*? are non-greedy matches of any charcter - i.e. they will find the shortest stretch of zero or more characters until the rest of the expression can be matched.
"
68,"I am trying to read all the elements in a dictionary one by one. my dictionary is as given below ""test"".
test ={'line4': (4, 2), 'line3': (3, 2), 'line2': (2, 2), 'line1': (1, 2), 'line10': (10, 2)}

i want to do as given in below sample code.
for i in range(1,len(test)+1):
    print test(1) # should print all the values one by one

thank you 
"
69,"Installing a module from a git repository in the usual ways does require a setup.py, but it can be a bare minimum one rather than a fuller one like you'd use for a PyPI module. For example:
#!/usr/bin/env python

from distutils.core import setup

setup(
    name=""foo"",
)

If you drop something like that into each of your lib repositories then you can make your requirements file point to the git repo using -e git://git.example.com/foo.git#egg=foo. If you install this into a virtualenv then it will appear at src/foo inside the virtualenv directory, and it'll be added to sys.path automatically when running Python from that virtualenv.
The -e option also accepts a local directory as a parameter, so if you guarantee that the current working directory will always be the root of your project when you install from requirements.txt (so that the relative path resolves correctly) it should work just fine to write things like -e lib1 in there, and then you can still reference the libraries as git submodules if you want.
If you are determined not to create a setup.py then your task is to emulate what would happen when running python setup.py develop. This command does two things (as of Python 2.7, at least):

It creates an egg link in the site-packages lib directory in your virtualenv (or system-wide if you don't have a virtualenv) that points to your target source directory.
It adds a line to easy-install.pth, which is also in the site-packages directory, which also points to your target source directory.

You could choose to do both of the above actions by a means other than running setup.py editable and get the same effect for current versions of Python, but of course the implementation of editable distributions may change in newer versions of Python.
"
70,"Here is a solution, it's not the best. Depending of what you want to do with this, I can provide a more specific solution
word = 'hello'
temp_word = ''
temp_word2 = ''

for k in word:
    temp_word += k
    print temp_word
while temp_word:
    temp_word = temp_word[:-1]
    print temp_word 

EDIT
I prefer this version more
word = 'hello'
for k in list(range(1,len(word)+1)) + list(range(len(word)-1,1,-1)):
    print word[:k]

"
71,"If you're wanting a generic function that replaces any text with some other text, this is likely the best way to go, particularly if you're a fan of regex's:
import re
def replace( filePath, text, subs, flags=0 ):
    with open( filePath, ""r+"" ) as file:
        fileContents = file.read()
        textPattern = re.compile( re.escape( text ), flags )
        fileContents = textPattern.sub( subs, fileContents )
        file.seek( 0 )
        file.truncate()
        file.write( fileContents )

"
72,"Here's a compact vectorized approach without those error checks -
def unique_map_pixels_vectorized(imgs):
    N,H,W = len(imgs), imgs.shape[2], imgs.shape[3]
    img2D = imgs.transpose(0, 2, 3, 1).reshape(-1,3)
    ID = np.ravel_multi_index(img2D.T,img2D.max(0)+1)
    _, firstidx, tags = np.unique(ID,return_index=True,return_inverse=True)
    return tags.reshape(N,H,W), img2D[firstidx]

Runtime test and verification -
In [24]: # Setup inputs (3x smaller than original ones)
    ...: N,H,W = 200,24,32
    ...: imgs = np.random.randint(0,10,(N,3,H,W))
    ...: 

In [25]: %timeit unique_map_pixels(imgs)
1 loop, best of 3: 2.21 s per loop

In [26]: %timeit unique_map_pixels_vectorized(imgs)
10 loops, best of 3: 37 ms per loop ## 60x speedup!

In [27]: map1,unq1 = unique_map_pixels(imgs)
    ...: map2,unq2 = unique_map_pixels_vectorized(imgs)
    ...: 

In [28]: np.allclose(map1,map2)
Out[28]: True

In [29]: np.allclose(np.array(map(list,unq1)),unq2)
Out[29]: True

"
73,"Say I have a list x = ['a','b','c'] to conditionally add a term to this you could do:
if conditional:
    x.append('d')

But I can't do this for a tuple (x = ('a','b','c'))
For both cases is there a 'clean' way of conditional-alising items in a definition. Pseudo code:
X = (
    'a',
    'b',
    'c',
    'd' if Y,
    'e' if Z,
)

The use case for this is a Django INSTALLED_APPS tuple and urlpatterns list.
"
74,"With a row of QListWidgets I wonder if there is a simple way to label each so the user would be able to say which List is which.
Here is a dialog's screenshot a code posted below results.
I avoid using any widgets outside of QListWidgets(). Ideal solution would be solved utilizing QListWidgets itself. It would be great if there is a way to place a text line-label similar to those available for QGroupBox with .setTitle('myString'). At very least an ability to place a label as a first list item would be sufficient too... 


from PyQt4 import QtGui, QtCore

class MyApp(object):
    def __init__(self):
        super(MyApp, self).__init__()
        app = QtGui.QApplication(sys.argv)
        self.mainWidget = QtGui.QWidget()
        self.mainLayout = QtGui.QVBoxLayout()
        self.mainWidget.setLayout(self.mainLayout)

        self.groupbox = QtGui.QGroupBox()
        self.groupbox.setTitle('My Groupbox')
        self.layout = QtGui.QVBoxLayout()
        self.groupbox.setLayout(self.layout)

        self.listGroupbox = QtGui.QGroupBox()
        self.listLayout = QtGui.QHBoxLayout()
        self.listGroupbox.setLayout(self.listLayout)
        self.listA=QtGui.QListWidget()
        self.listB=QtGui.QListWidget()

        self.listLayout.addWidget(self.listA)
        self.listLayout.addWidget(self.listB)
        self.layout.addWidget(self.listGroupbox) 

        self.okButton = QtGui.QPushButton('OK')
        self.okButton.clicked.connect(self.OK) 
        self.layout.addWidget(self.okButton)                      
        self.mainLayout.addWidget(self.groupbox)
        self.mainWidget.show()
        sys.exit(app.exec_())

    def OK(self):
        print 'Ok'    
if __name__ == '__main__':
    MyApp()



"
75,"Use threads in python if the individual workers are doing I/O bound operations. If you are trying to scale across multiple cores on a machine either find a good IPC framework for python or pick a different language.
"
76,"I'm trying to find a blendshape deformer from a target mesh in the python maya api. I'm pretty sure I have to iterate through the dependency graph to get the blendshape.
This is what i'm trying:
import maya.OpenMaya as OpenMaya
import maya.OpenMayaAnim as OpenMayaAnim

#Name of our targetmesh.
targetMesh = ""pSphere1""

#Add selection.
mSel = OpenMaya.MSelectionList()
mSel.add(targetMesh, True)

#Get MObj
mObj = OpenMaya.MObject()
mSel.getDependNode(0, mObj)

#Make iterator.
itDG = OpenMaya.MItDependencyGraph(mObj,
                                   OpenMaya.MFn.kBlendShape, 
                                   OpenMaya.MItDependencyGraph.kUpstream)

while not itDG.isDone():
    oCurrentItem = itDG.currentItem()
    blndSkin = OpenMayaAnim.MFnBlendShapeDeformer(oCurrentItem)
    print blndSkin
    break

Unfortunately I get no blendshape deformer.
The same example with maya.cmds:
import maya.cmds as cmds

targetMesh = ""pSphere1""    

history = cmds.listHistory(targetMesh, future=True)
blndshape = cmds.ls(history, type=""blendShape"")

print blndshape

Any help would be greatly appreciated!
"
77,"I ended up restructuring my project so that the docs directory is at the same level as my project directory that contains all the files. This works when I use sys.path.insert(0, os.path.abspath(""../"")), and it's probably a bit nicer to look at.
project
    | docs/
    | project/
        | project files, etc.
    | tests/

"
78,"It sounds like you're using Numpy. If so, the shape (38845,) means you have a 1-dimensional array, of size 38845.
"
79,"I'm testing a web application using Django-nose to monitor the code coverage. At first it worked perfectly well, but when trying to generate HTML it fails with the error:
Imput error: No module named copy_reg
It happened after a few times (until then in worked). I tried it on a computer with newly installed django, django-nose and coverage and the very same code works fine. Re-installing django and django-nose didn't help.
Any suggestions? Should I re-install any library or something?
Thank you in advance!
"
80,"Right now I'm having trouble with the code restarting. It restarts but it doesn't go back to the beginning. It just keeps asking me if I want to restart.
For example it says 
The player has cards [number, number, number, number, number] with a total value of (whatever the numbers add up too.)

--> Player is busted!

Start over? Y/N

I type in Y and it keeps saying
The player has cards [number, number, number, number, number] with a total value of (whatever the numbers add up too.)

--> Player is busted!

Start over? Y/N

Can anyone please fix it so that it will restart. - or tell me how to my code is below.
from random import choice as rc
def playAgain():
# This function returns True if the player wants to play again, otherwise it returns False.
print('Do you want to play again? (yes or no)')
return input().lower().startswith('y')
def total(hand):
# how many aces in the hand
aces = hand.count(11)
t = sum(hand)
# you have gone over 21 but there is an ace
if t > 21 and aces > 0:
    while aces > 0 and t > 21:
        # this will switch the ace from 11 to 1
        t -= 10
        aces -= 1
return t
cards = [2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 10, 10, 11]
c2win = 0 # computer2 win
cwin = 0  # computer win 
pwin = 0  # player win 
while True:
player = []
player.append(rc(cards))
player.append(rc(cards))
pbust = False  # player busted 
cbust = False  # computer busted
c2bust = False # computer2 busted
while True:
    tp = total(player)
    print (""The player has cards %s with a total value of %d"" % (player, tp))
    if tp > 21:
        print (""--> Player is busted!"")
        pbust = True
        print('Start over? Y/N')
        answer = input()
        if answer == 'n':
            done = True
            break
    elif tp == 21:
        print (""\a BLACKJACK!!!"")
        print(""do you want to play again?"")
        answer = input()
        if answer == 'y':
            done = False
        else:
            break
    else:
        hs = input(""Hit or Stand/Done (h or s): "").lower()
        if 'h' in hs:
            player.append(rc(cards))
        if 's' in hs:
            player.append(rc(cards))
while True:
    comp = []
    comp.append(rc(cards))
    comp.append(rc(cards))
while True:
    comp2 = []
    comp.append(rc(cards))
    comp.append(rc(cards))
    while True:
        tc = total(comp)                
        if tc < 18:
            comp.append(rc(cards))
        else:
            break
    print (""the computer has %s for a total of %d"" % (comp, tc))
    if tc > 21:
        print (""--> Computer is busted!"")
        cbust = True
        if pbust == False:
            print (""Player wins!"")
            pwin += 1
            print('Start over? Y/N')
        answer = input()
        if answer == 'y':
            playAgain()  
        if answer == 'n':
            done = True
    elif tc > tp:
        print (""Computer wins!"")
        cwin += 1
    elif tc == tp:
        print (""It's a draw!"")
    elif tp > tc:
        if pbust == False:
            print (""Player wins!"")
            pwin += 1
        elif cbust == False:
            print (""Computer wins!"")
            cwin += 1
    break
print
print (""Wins, player = %d  computer = %d"" % (pwin, cwin))
exit = input(""Press Enter (q to quit): "").lower()
if 'q' in exit:
    break
print
print
print (""Thanks for playing blackjack with the computer!"")

"
81,"The closest you can get to rubyish blocks is the with statement from pep343: 
http://www.python.org/dev/peps/pep-0343/
"
82,"To answer this specific question:

How do I take object-based inputs and turn them into passable
  variables?

You access the controls and call the appropriate methods:
self.resize_txt.GetValue()
self.file_input.GetPath()
self.outfile_input.GetPath()

To pass them to your resize, function, just pass those values to your resize_file function.
resize_file(self.file_input.GetPath(),
            self.outfile_input.GetPath())

You're asking too many questions here TBH.  You should start with one, and create others as you progress.
What the heck, I have time to kill before lunch!  I'll give you a few pointers.
Let's look at this function:
def resize_file(filename, filename2 = None)

Looking at this function, I really have no idea what the inputs are to the function.  It says filename and an optional filename2.  Which of these is being resized?  How do I know what each parameter does?  You did not document this function, which made me dig off into your code to try to determine what it does.
So, I dug off into your code...  And it appears that this particular function resizes and possibly appends pdfs.  Notice how in your code, you execute the same code twice?
fIn1 = file(os.path.join(inputDir,filename), 'rb')

inp1 = PdfFileReader(fIn1)
p1 = inp1.getPage(0)
p1.scale(.5,.5)
output.addPage(p1)

if filename2 is not None:
    fIn2 = file(os.path.join(inputDir,filename2), 'rb')
    inp2 = PdfFileReader(fIn2)
    p2 = inp2.getPage(0)
    p2.scale(.50,.50)
    output.addPage(p2)

Don't do this.  Use the DRY principle.  You should have a loop, as the algorithm is basically the same.  (Can't illustrate the loop atm, running out of time before lunch, maybe when I get back :P)
You could even get fancy and have your function take an indefinite amount of PDF files.  Check this snippet out:
def resize_file(*args):
    output = PdfFileWriter()

    for filename in args:
        fIn1 = file(os.path.join(inputDir, filename), 'rb')
        inp1 = PdfFileReader(fIn1)
        p1 = inp1.getPage(0)
        p1.scale(.5,.5)
        output.addPage(p1)

    outputStream = file(os.path.join(validateDir,str(fileout) + '.pdf'),""wb"")
    output.write(outputStream)
    outputStream.close()

Ok, I lied, I tried to squeeze this in before lunch.  The code above may not work out of the box, but it should point you in the general direction.  You should add error catching to check for when no arguments are passed (among other things).
Hope it helps!
"
83,"I'm using python version 2.7.3.
test.txt:
<?xml version=""1.0"" encoding=""UTF-8""?>
<root>
    <test>The tag &lt;StackOverflow&gt; is good to bring up at parties.</test>
</root>

Result:
>>> import xml.etree.ElementTree as ET
>>> e = ET.parse('test.txt')
>>> root = e.getroot()
>>> print root.find('test').text
The tag <StackOverflow> is good to bring up at parties.

As you can see, the parser must have changed the &lt;'s to <'s etc.
What I'd like to see:
The tag &lt;StackOverflow&gt; is good to bring up at parties.
Untouched, raw text. Sometimes I really like it raw. Uncooked.
I'd like to use this text as-is for display within HTML, therefore I don't want an XML parser to mess with it.
Do I have to re-escape each string or can there be another way?
"
84,"Bartosz/To clarify ""This worked okay, but there was no easy way of checking if x[3][24] was supposed to exist or not""
x['some show'][3][24] would return season 3, episode 24 of ""some show"". If there was no season 3, I want the pseudo-dict to raise tvdb_seasonnotfound, if ""some show"" doesn't exist, then raise tvdb_shownotfound
The current system of a series of classes, each with a __getitem__ - Show checks if self.seasons.has_key(requested_season_number), the Season class checks if self.episodes.has_key(requested_episode_number) and so on.
It works, but it there seems to be a lot of repeated code (each class is basically the same, but raises a different error)
"
85,"I don't have pexpect handy to test my answer to your question, but I have a suggestion that should work and, if not, may at least get you closer.  
Consider this command:
$ ssh oak 'ftp << EOF
lpwd
quit
EOF'
Local directory: /home/jklowden
$ 

What is happening?  The entire quoted string is passed as a single argument to ssh, where it is ""executed"" on the remote.  While ssh isn't explicit about what that means, exactly, we know what execv(2) does: if execve(2) fails to execute its passed arguments, the execv function will invoke /bin/sh with the same arguments (in this case, our quoted string).  The shell then evaluates the quoted string as separate arguments, detects the HereDoc redirection, and executes per usual.  
Using that information, and taking a quick look at the pexpect.pxssh documentation, it looks like you want:
s = pxssh.pxssh()
...
s.sendline('ftp << EOF\nlpwd\nquit\nEOF')

If that doesn't work, something is munging your data.  Five minutes with strace(1) will tell you what happened to it, and you can start pointing fingers.  ;-)
HTH.  
"
86,"What makes you think your only have one connection to redis? Actually my little test shows that your server is indeed opening lots of connections to redis.
To make the test more clear, I modified your print statement a bit:
print '%s' % parameters['index'], 'in_use_conn:', len(p._in_use_connections), 'created_connections:', p._created_connections, 'available_conn:', len(p._available_connections)

Then run this script to make some requests:
for i in {1..20}
do
    wget http://127.0.0.1:7332/top?index=$i > /dev/null 2>&1 &
done

And here's what I got:
['1'] in_use_conn: 1 created_connections: 2 available_conn: 1
['2'] in_use_conn: 4 created_connections: 5 available_conn: 1
['3'] in_use_conn: 3 created_connections: 5 available_conn: 2
['4'] in_use_conn: 5 created_connections: 6 available_conn: 1
['6'] in_use_conn: 4 created_connections: 6 available_conn: 2
['5'] in_use_conn: 3 created_connections: 6 available_conn: 3
['7'] in_use_conn: 2 created_connections: 6 available_conn: 4
['10'] in_use_conn: 1 created_connections: 6 available_conn: 5
['8'] in_use_conn: 0 created_connections: 6 available_conn: 6
['14'] in_use_conn: 10 created_connections: 11 available_conn: 1
['11'] in_use_conn: 9 created_connections: 11 available_conn: 2
['12'] in_use_conn: 8 created_connections: 11 available_conn: 3
['16'] in_use_conn: 7 created_connections: 11 available_conn: 4
['15'] in_use_conn: 6 created_connections: 11 available_conn: 5
['13'] in_use_conn: 5 created_connections: 11 available_conn: 6
['20'] in_use_conn: 4 created_connections: 11 available_conn: 7
['19'] in_use_conn: 3 created_connections: 11 available_conn: 8
['9'] in_use_conn: 2 created_connections: 11 available_conn: 9
['17'] in_use_conn: 1 created_connections: 11 available_conn: 10
['18'] in_use_conn: 0 created_connections: 11 available_conn: 11

It can be seen that at peek time you have 10 greenlets running simultaneously, waiting for sockets. Your code looks perfectly fine to me. Why 'the performance is bad' is another story. It could be your sorted set of 'online' is tooo large. Or more likely you are using a blocking client to test the server, in which case you'll see only one connection to redis.
"
87,"Setting choices on the field will allow some validation on the Django end, but it won't define any form of an enumerated type on the database end.
As others have mentioned, the solution is to specify db_type on a custom field.
If you're using a SQL backend (e.g. MySQL), you can do this like so:
from django.db import models


class EnumField(models.Field):
    def __init__(self, *args, **kwargs):
        super(EnumField, self).__init__(*args, **kwargs)
        assert self.choices, ""Need choices for enumeration""

    def db_type(self, connection):
        if not all(isinstance(col, basestring) for col, _ in self.choices):
            raise ValueError(""MySQL ENUM values should be strings"")
        return ""ENUM({})"".format(','.join(""'{}'"".format(col) 
                                          for col, _ in self.choices))


class IceCreamFlavor(EnumField, models.CharField):
    def __init__(self, *args, **kwargs):
        flavors = [('chocolate', 'Chocolate'),
                   ('vanilla', 'Vanilla'),
                  ]
        super(IceCreamFlavor, self).__init__(*args, choices=flavors, **kwargs)


class IceCream(models.Model):
    price = models.DecimalField(max_digits=4, decimal_places=2)
    flavor = IceCreamFlavor(max_length=20)

Run syncdb, and inspect your table to see that the ENUM was created properly.
mysql> SHOW COLUMNS IN icecream;
+--------+-----------------------------+------+-----+---------+----------------+
| Field  | Type                        | Null | Key | Default | Extra          |
+--------+-----------------------------+------+-----+---------+----------------+
| id     | int(11)                     | NO   | PRI | NULL    | auto_increment |
| price  | decimal(4,2)                | NO   |     | NULL    |                |
| flavor | enum('chocolate','vanilla') | NO   |     | NULL    |                |
+--------+-----------------------------+------+-----+---------+----------------+

"
88,"Since version 4.3.0 dated 2017-01-31, Anaconda comes with seaborn installed by default. Try upgrading your Anaconda installation.
"
89,"Looks like you have a header of 24 binary bytes before your utf16-encoded string starts. So you can read the file as binary and decode afterwards:
with open(filename, ""rb"") as data:
    header = data.read(24)
    text = data.read().decode('utf-16-le')

But probably there are other binary parts. Without knowing the exact file format, there cannot be given more help.
"
90,"The quickstart.py example sets the scope to:
https://www.googleapis.com/auth/spreadsheets.readonly

To update the spreadsheet you need to set the scope to:
https://www.googleapis.com/auth/spreadsheets

You can do this by first deleting the existing authentication file in ~/.credentials (that is the location on a raspberry.). It will likely be called ""sheets.googleapis.com-python-quickstart.json.
After you removed it you will need to re-authenticate, which should happen automatically when you re-run the script.
"
91,"I hope I can find help for my question. I am searching for a solution for the following problem:
I have a dataFrame like:
 Sp  Mt Value  count
0  MM1  S1   a      **3**
1  MM1  S1   n      2
2  MM1  S3   cb     5
3  MM2  S3   mk      **8**
4  MM2  S4   bg     **10**
5  MM2  S4   dgd      1
6  MM4  S2  rd     2
7  MM4  S2   cb      2
8  MM4  S2   uyi      **7**

My objective is to get the result rows whose count is max between the groups, like :
0  MM1  S1   a      **3**
1 3  MM2  S3   mk      **8**
4  MM2  S4   bg     **10** 
8  MM4  S2   uyi      **7**

Somebody knows how can I do it in pandas or in python?
UPDATE
I didn't give more details for my question. For my problem, I want to group by ['Sp','Mt'].  Let take a second example like this :
   Sp   Mt   Value  count
4  MM2  S4   bg     10
5  MM2  S4   dgd    1
6  MM4  S2   rd     2
7  MM4  S2   cb     8
8  MM4  S2   uyi    8

For the above example, I want to get ALL the rows where count equals max in each group e.g :
MM2  S4   bg     10
MM4  S2   cb     8
MM4  S2   uyi    8

"
92,"The recursion is happening fine, but temp_dir is not a directory so it passes control to your stub else block. You can see this if you put print(file_path) outside your if block.
temp_dir is the name of the next directory, not its absolute path. ""C:/users/adsmith/tmp/folder"" becomes just ""folder"". Use os.path.abspath to get that
self.convert(os.path.abspath(temp_dir))

Although the canonical way to do this (as mentioned in my comment on the question) is to use os.walk.
class FileProcessor(object):
    def convert(self, file_path):
        for root, dirs, files in os.walk(file_path):
            # if file_path is C:/users/adsmith, then:
            #   root == C:/users/adsmith
            #   dirs is an iterator of each directory in C:/users/adsmith
            #   files is an iterator of each file in C:/users/adsmith
            # this walks on its own, so your next iteration will be
            # the next deeper directory in `dirs`

            for i, d in enumerate(dirs):
                # this is also preferred to setting a counter var and incrementing
                print(i, "":"", d)
                # no need to recurse here since os.walk does that itself
            for fname in files:
                # do something with the files? I guess?

"
93,"I have to apologise in advance 'cause this question is quite general and may be not clear enough. The question is: how would you run in parallel a Python function that itself uses a pool of processes for some subtasks and does lots of heavy I/O operations? Is it even a valid task?
I will try to provide some more information. I've got a procedure, say test_reduce(), that I need to run in parallel. I tried several ways to do that (see below), and I seem to lack some knowledge to understand why all of them fail.
This test_reduce() procedure does lots of things. Some of those are more relevant to the question than others (and I list them below):

It uses the multiprocessing module (sic!), namely a pool.Pool instance,
It uses a MongoDB connection,
It relies heavily on numpy and scikit-learn libs,
It uses callbacks and lambdas,
It uses the dill lib to pickle some stuff.

First I tried to use a multiprocessing.dummy.Pool (which seems to be a thread pool). I don't know what is specific about this pool and why it is, eh, ""dummy""; the whole thing worked, and I got my results. The problem is CPU load. For parallelized sections of test_reduce() it was 100% for all cores; for synchronous sections it was around 40-50% most of the time. I can't say there was any increase in overall speed for this type of ""parallel"" execution. 
Then I tried to use a multiprocessing.pool.Pool instance to map this procedure to my data. It failed with the following:
File ""/usr/lib/python2.7/multiprocessing/pool.py"", line 251, in map
    return self.map_async(func, iterable, chunksize).get()
  File ""/usr/lib/python2.7/multiprocessing/pool.py"", line 558, in get
    raise self._value
cPickle.PicklingError: Can't pickle <type 'thread.lock'>: attribute lookup thread.lock failed

I made a guess that cPickle is to blame, and found the pathos lib that uses a far more advanced pickler dill. However it also fails:
File ""/local/lib/python2.7/site-packages/dill/dill.py"", line 199, in load
    obj = pik.load()
  File ""/usr/lib/python2.7/pickle.py"", line 858, in load
    dispatch[key](self)
  File ""/usr/lib/python2.7/pickle.py"", line 1083, in load_newobj
    obj = cls.__new__(cls, *args)
TypeError: object.__new__(generator) is not safe, use generator.__new__()

Now, this error is something I don't understand at all. I've got no output to stdout from my procedure when it works in a pool, so it's hard to guess what's going on. The only thing I know is that test_reduce() runs successfully when no multiprocessing is used.
So, how would you run in parallel something that heavy and complicated?
"
94,"In a html5 page using image map, I would like to use python (or Perl, Ruby, C) to crawl it to find a particular image (those are separated by a transparency area) in another one and click it when this image is found. The image are the same all the times. What is the best way to achieve this ? 
Edit: for french readers, the trick is implemented, see http://www.sputnick-area.net/?p=572
"
95,"You could actually pull this off, but it would require using metaclasses, which are deep magic (there be dragons). If you want an intro to metaclasses, there's a series of articles from IBM which manage to introduce the ideas without melting your brain.
The source code from an ORM like SQLObject might help, too, since it uses this same kind of declarative syntax.
"
96,"The element.get() method is used to retrieve option attribute values in a tag:
>>> page_id = tree.find('page').get('id')
>>> if page_id:
        print page_id

31239628

"
97,"In Powershell you can use:
Get-Childitem -Path c:\to\folder\ -Filter *.py | % {& $_.FullName}

"
98,"I'm working with 3-dimensional arrays (for the purpose of this example you can imagine they represent the RGB values at X, Y coordinates of the screen).
>>> import numpy as np
>>> a = np.floor(10 * np.random.random((2, 2, 3)))
>>> a
array([[[ 7.,  3.,  1.],
        [ 9.,  6.,  9.]],

       [[ 4.,  6.,  8.],
        [ 8.,  1.,  1.]]])

What I would like to do, is to set to an arbitrary value the G channel for those pixels whose G channel is already below 5. I can manage to isolate the pixel I am interested in using:
>>> a[np.where(a[:, :, 1] < 5)]
array([[ 7.,  3.,  1.],
       [ 8.,  1.,  1.]])

but I am struggling to understand how to assign a new value to the G channel only. I tried:
>>> a[np.where(a[:, :, 1] < 5)][1] = 9
>>> a
array([[[ 7.,  3.,  1.],
        [ 9.,  6.,  9.]],

       [[ 4.,  6.,  8.],
        [ 8.,  1.,  1.]]])

...but it seems not to produce any effect. I also tried:
>>> a[np.where(a[:, :, 1] < 5), 1] = 9
>>> a
array([[[ 7.,  3.,  1.],
        [ 9.,  9.,  9.]],

       [[ 4.,  6.,  8.],
        [ 9.,  9.,  9.]]])

...(failing to understand what is happening). Finally I tried:
>>> a[np.where(a[:, :, 1] < 5)][:, 1] = 9
>>> a
array([[[ 7.,  3.,  1.],
        [ 9.,  6.,  9.]],

       [[ 4.,  6.,  8.],
        [ 8.,  1.,  1.]]])

I suspect I am missing something fundamental on how NumPy works (this is the first time I use the library). I would appreciate some help in how to achieve what I want as well as some explanation on what happened with my previous attempts.
Many thanks in advance for your help and expertise!
EDIT: The outcome I would like to get is:
>>> a
array([[[ 7.,  9.,  1.],     # changed the second number here
        [ 9.,  6.,  9.]],

       [[ 4.,  6.,  8.],
        [ 8.,  9.,  1.]]])   # changed the second number here

"
99,"I want to match either key or key=val in python such that the resulting groupdict() from the Match object will either have val as None or have a value. 
The following is close:
>>> regex = re.compile('(?P<key>[^=]+)=?(?P<val>.*)')
>>> regex.match('x=y').groupdict()
{'key': 'x', 'val': 'y'}            # yes!
>>> regex.match('x').groupdict()
{'key': 'x', 'val': ''}             # want None, not ''

But I want val to be None in the second case. I tried moving the optional = into the second group:
>>> regex = re.compile('(?P<key>[^=]+)(?P<val>=.+)?')
>>> regex.match('x').groupdict()
{'key': 'x', 'val': None}           # yes!
>>> regex.match('x=y').groupdict()
{'key': 'x', 'val': '=y'}           # don't want the =

That gives me the None, but then attaches the = to val. I also tried using the lookbehind with (?<==) but that didn't work for either expression. Is there a way to achieve this?
"
