Recently, I read a math problem inspiring me to write a program. It asked to arrange the digits 0-9 once each so that xx xxx / xx xxx = 9. I wrote a python program to find the solutions and had a bit of trouble making sure the digits were different. I found a way using nested whiles and ifs, but I'm not quite happy with it.
b,c,x,y,z = 0,0,0,0,0  #I shortened the code from b,c,d,e,v,w,x,y,z
for a in range (10):
    while b < 10:
        if b != a:
            while c < 10:
                if c != b and c != a:
                    while x < 10:
                        if x != c and x != b and x != a:
                            while y < 10:
                                if y != x and y != c and y != b and y != a:
                                    while z < 10:
                                        if z != y and if z != z and y != c and z != b and z != a:
                                            if (a*100 + b*10 + c)/(x*100 + y*10 + z) == 9:
                                                print ()
                                                print (str (a*100 + b*10 + c) + "/" + str (x*100 + y*10 + z)
                                        z += 1
                                    z = 0
                                y += 1
                            y,z = 0,0
                        x += 1
                    x,y,z = 0,0,0
                c += 1
            c,x,y,z = 0,0,0,0
        b += 1
    b,c,x,y,z = 0,0,0,0,0

As you can see, the code is very long and repetitive, even the shortened form. Running it on my laptop takes almost a minute (and my laptop is new). I have searched for answers, but I only found ways to generate random numbers. I tried using itertools.permutations as well, but that only shows the permutations, not creating a number. 
Generating all ten digits takes too long, and I want to know if there is a faster, simpler way, with an explanation, using python 3..
Thanks

